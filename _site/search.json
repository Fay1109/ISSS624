[
  {
    "objectID": "In-class_Ex5/In-class_Ex5.html",
    "href": "In-class_Ex5/In-class_Ex5.html",
    "title": "In-class_Ex5: Modeling the Spatial Variation: the Explanatory Factors of Water Point Status using Geographical Weighted Logistic Regression",
    "section": "",
    "text": "To build an explanatory model to discover factor affecting water point status in Osun State, Nigeria\n\n\nDependent variable: Water point status (i.e. functional/non-functional)\nIndependent variables:\ndistance to_primary road,\ndistance tosecondary road\ndistance to tertiary road,\ndistance tocity,\ndistance to town\nwater_point_population.\nlocal_population_km,\nusage_capacity,\nis_urban,\nwater_source clean"
  },
  {
    "objectID": "In-class_Ex5/In-class_Ex5.html#getting-start",
    "href": "In-class_Ex5/In-class_Ex5.html#getting-start",
    "title": "In-class_Ex5: Modeling the Spatial Variation: the Explanatory Factors of Water Point Status using Geographical Weighted Logistic Regression",
    "section": "Getting start",
    "text": "Getting start\nCreate In-class Exercise 5 folder\nWrite a code chunk to load the following R packages: sf, tidyverse, funModeling, blorr, corrplot, ggpubr, sf, spdep, GWmodel, tmap, skimr, caret\n\npacman::p_load(sf, tidyverse, funModeling, blorr, corrplot, ggpubr, sf, spdep, GWmodel, tmap, skimr, caret, report)"
  },
  {
    "objectID": "In-class_Ex5/In-class_Ex5.html#data-import",
    "href": "In-class_Ex5/In-class_Ex5.html#data-import",
    "title": "In-class_Ex5: Modeling the Spatial Variation: the Explanatory Factors of Water Point Status using Geographical Weighted Logistic Regression",
    "section": "Data Import",
    "text": "Data Import"
  },
  {
    "objectID": "In-class_Ex5/In-class_Ex5.html#importing-water-point-data",
    "href": "In-class_Ex5/In-class_Ex5.html#importing-water-point-data",
    "title": "In-class_Ex5: Modeling the Spatial Variation: the Explanatory Factors of Water Point Status using Geographical Weighted Logistic Regression",
    "section": "Importing Water Point Data",
    "text": "Importing Water Point Data\nFirst, we are going to import the water point data into R environment."
  },
  {
    "objectID": "In-class_Ex5/In-class_Ex5.html#importing-the-analytical-data",
    "href": "In-class_Ex5/In-class_Ex5.html#importing-the-analytical-data",
    "title": "In-class_Ex5: Modeling the Spatial Variation: the Explanatory Factors of Water Point Status using Geographical Weighted Logistic Regression",
    "section": "Importing the Analytical Data",
    "text": "Importing the Analytical Data\n\nOsun <- read_rds(\"rds/Osun.rds\")\nOsun_wp_sf <- read_rds(\"rds/Osun_wp_sf.rds\")\n\n\nOsun_wp_sf %>%\n  freq(input = 'status')\n\nWarning: The `<scale>` argument of `guides()` cannot be `FALSE`. Use \"none\" instead as\nof ggplot2 3.3.4.\nℹ The deprecated feature was likely used in the funModeling package.\n  Please report the issue at <https://github.com/pablo14/funModeling/issues>.\n\n\n\n\n\n  status frequency percentage cumulative_perc\n1   TRUE      2642       55.5            55.5\n2  FALSE      2118       44.5           100.0\n\n\n\ntmap_mode(\"view\")\n\ntmap mode set to interactive viewing\n\ntm_shape(Osun)+\n  tmap_options(check.and.fix = TRUE) +\n  tm_polygons(alpha = 0.4) +\n  tm_shape(Osun_wp_sf) +\n  tm_dots(col = \"status\",\n          alpha = 0.6) +\n  tm_view(set.zoom.limits = c(9,12))"
  },
  {
    "objectID": "In-class_Ex5/In-class_Ex5.html#exploratory-data-analysis",
    "href": "In-class_Ex5/In-class_Ex5.html#exploratory-data-analysis",
    "title": "In-class_Ex5: Modeling the Spatial Variation: the Explanatory Factors of Water Point Status using Geographical Weighted Logistic Regression",
    "section": "Exploratory Data Analysis",
    "text": "Exploratory Data Analysis\n\nSummary Statistics with skimr\n\nOsun_wp_sf %>%\n  skim()\n\nWarning: Couldn't find skimmers for class: sfc_POINT, sfc; No user-defined `sfl`\nprovided. Falling back to `character`.\n\n\n\nData summary\n\n\nName\nPiped data\n\n\nNumber of rows\n4760\n\n\nNumber of columns\n75\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n47\n\n\nlogical\n5\n\n\nnumeric\n23\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nsource\n0\n1.00\n5\n44\n0\n2\n0\n\n\nreport_date\n0\n1.00\n22\n22\n0\n42\n0\n\n\nstatus_id\n0\n1.00\n2\n7\n0\n3\n0\n\n\nwater_source_clean\n0\n1.00\n8\n22\n0\n3\n0\n\n\nwater_source_category\n0\n1.00\n4\n6\n0\n2\n0\n\n\nwater_tech_clean\n24\n0.99\n9\n23\n0\n3\n0\n\n\nwater_tech_category\n24\n0.99\n9\n15\n0\n2\n0\n\n\nfacility_type\n0\n1.00\n8\n8\n0\n1\n0\n\n\nclean_country_name\n0\n1.00\n7\n7\n0\n1\n0\n\n\nclean_adm1\n0\n1.00\n3\n5\n0\n5\n0\n\n\nclean_adm2\n0\n1.00\n3\n14\n0\n35\n0\n\n\nclean_adm3\n4760\n0.00\nNA\nNA\n0\n0\n0\n\n\nclean_adm4\n4760\n0.00\nNA\nNA\n0\n0\n0\n\n\ninstaller\n4760\n0.00\nNA\nNA\n0\n0\n0\n\n\nmanagement_clean\n1573\n0.67\n5\n37\n0\n7\n0\n\n\nstatus_clean\n0\n1.00\n9\n32\n0\n7\n0\n\n\npay\n0\n1.00\n2\n39\n0\n7\n0\n\n\nfecal_coliform_presence\n4760\n0.00\nNA\nNA\n0\n0\n0\n\n\nsubjective_quality\n0\n1.00\n18\n20\n0\n4\n0\n\n\nactivity_id\n4757\n0.00\n36\n36\n0\n3\n0\n\n\nscheme_id\n4760\n0.00\nNA\nNA\n0\n0\n0\n\n\nwpdx_id\n0\n1.00\n12\n12\n0\n4760\n0\n\n\nnotes\n0\n1.00\n2\n96\n0\n3502\n0\n\n\norig_lnk\n4757\n0.00\n84\n84\n0\n1\n0\n\n\nphoto_lnk\n41\n0.99\n84\n84\n0\n4719\n0\n\n\ncountry_id\n0\n1.00\n2\n2\n0\n1\n0\n\n\ndata_lnk\n0\n1.00\n79\n96\n0\n2\n0\n\n\nwater_point_history\n0\n1.00\n142\n834\n0\n4750\n0\n\n\nclean_country_id\n0\n1.00\n3\n3\n0\n1\n0\n\n\ncountry_name\n0\n1.00\n7\n7\n0\n1\n0\n\n\nwater_source\n0\n1.00\n8\n30\n0\n4\n0\n\n\nwater_tech\n0\n1.00\n5\n37\n0\n20\n0\n\n\nadm2\n0\n1.00\n3\n14\n0\n33\n0\n\n\nadm3\n4760\n0.00\nNA\nNA\n0\n0\n0\n\n\nmanagement\n1573\n0.67\n5\n47\n0\n7\n0\n\n\nadm1\n0\n1.00\n4\n5\n0\n4\n0\n\n\nNew Georeferenced Column\n0\n1.00\n16\n35\n0\n4760\n0\n\n\nlat_lon_deg\n0\n1.00\n13\n32\n0\n4760\n0\n\n\npublic_data_source\n0\n1.00\n84\n102\n0\n2\n0\n\n\nconverted\n0\n1.00\n53\n53\n0\n1\n0\n\n\ncreated_timestamp\n0\n1.00\n22\n22\n0\n2\n0\n\n\nupdated_timestamp\n0\n1.00\n22\n22\n0\n2\n0\n\n\nGeometry\n0\n1.00\n33\n37\n0\n4760\n0\n\n\nADM2_EN\n0\n1.00\n3\n14\n0\n30\n0\n\n\nADM2_PCODE\n0\n1.00\n8\n8\n0\n30\n0\n\n\nADM1_EN\n0\n1.00\n4\n4\n0\n1\n0\n\n\nADM1_PCODE\n0\n1.00\n5\n5\n0\n1\n0\n\n\n\nVariable type: logical\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\ncount\n\n\n\n\nrehab_year\n4760\n0\nNaN\n:\n\n\nrehabilitator\n4760\n0\nNaN\n:\n\n\nis_urban\n0\n1\n0.39\nFAL: 2884, TRU: 1876\n\n\nlatest_record\n0\n1\n1.00\nTRU: 4760\n\n\nstatus\n0\n1\n0.56\nTRU: 2642, FAL: 2118\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nrow_id\n0\n1.00\n68550.48\n10216.94\n49601.00\n66874.75\n68244.50\n69562.25\n471319.00\n▇▁▁▁▁\n\n\nlat_deg\n0\n1.00\n7.68\n0.22\n7.06\n7.51\n7.71\n7.88\n8.06\n▁▂▇▇▇\n\n\nlon_deg\n0\n1.00\n4.54\n0.21\n4.08\n4.36\n4.56\n4.71\n5.06\n▃▆▇▇▂\n\n\ninstall_year\n1144\n0.76\n2008.63\n6.04\n1917.00\n2006.00\n2010.00\n2013.00\n2015.00\n▁▁▁▁▇\n\n\nfecal_coliform_value\n4760\n0.00\nNaN\nNA\nNA\nNA\nNA\nNA\nNA\n\n\n\ndistance_to_primary_road\n0\n1.00\n5021.53\n5648.34\n0.01\n719.36\n2972.78\n7314.73\n26909.86\n▇▂▁▁▁\n\n\ndistance_to_secondary_road\n0\n1.00\n3750.47\n3938.63\n0.15\n460.90\n2554.25\n5791.94\n19559.48\n▇▃▁▁▁\n\n\ndistance_to_tertiary_road\n0\n1.00\n1259.28\n1680.04\n0.02\n121.25\n521.77\n1834.42\n10966.27\n▇▂▁▁▁\n\n\ndistance_to_city\n0\n1.00\n16663.99\n10960.82\n53.05\n7930.75\n15030.41\n24255.75\n47934.34\n▇▇▆▃▁\n\n\ndistance_to_town\n0\n1.00\n16726.59\n12452.65\n30.00\n6876.92\n12204.53\n27739.46\n44020.64\n▇▅▃▃▂\n\n\nrehab_priority\n2654\n0.44\n489.33\n1658.81\n0.00\n7.00\n91.50\n376.25\n29697.00\n▇▁▁▁▁\n\n\nwater_point_population\n4\n1.00\n513.58\n1458.92\n0.00\n14.00\n119.00\n433.25\n29697.00\n▇▁▁▁▁\n\n\nlocal_population_1km\n4\n1.00\n2727.16\n4189.46\n0.00\n176.00\n1032.00\n3717.00\n36118.00\n▇▁▁▁▁\n\n\ncrucialness_score\n798\n0.83\n0.26\n0.28\n0.00\n0.07\n0.15\n0.35\n1.00\n▇▃▁▁▁\n\n\npressure_score\n798\n0.83\n1.46\n4.16\n0.00\n0.12\n0.41\n1.24\n93.69\n▇▁▁▁▁\n\n\nusage_capacity\n0\n1.00\n560.74\n338.46\n300.00\n300.00\n300.00\n1000.00\n1000.00\n▇▁▁▁▅\n\n\ndays_since_report\n0\n1.00\n2692.69\n41.92\n1483.00\n2688.00\n2693.00\n2700.00\n4645.00\n▁▇▁▁▁\n\n\nstaleness_score\n0\n1.00\n42.80\n0.58\n23.13\n42.70\n42.79\n42.86\n62.66\n▁▁▇▁▁\n\n\nlocation_id\n0\n1.00\n235865.49\n6657.60\n23741.00\n230638.75\n236199.50\n240061.25\n267454.00\n▁▁▁▁▇\n\n\ncluster_size\n0\n1.00\n1.05\n0.25\n1.00\n1.00\n1.00\n1.00\n4.00\n▇▁▁▁▁\n\n\nlat_deg_original\n4760\n0.00\nNaN\nNA\nNA\nNA\nNA\nNA\nNA\n\n\n\nlon_deg_original\n4760\n0.00\nNaN\nNA\nNA\nNA\nNA\nNA\nNA\n\n\n\ncount\n0\n1.00\n1.00\n0.00\n1.00\n1.00\n1.00\n1.00\n1.00\n▁▁▇▁▁\n\n\n\n\n\n\nOsun_wp_sf_clean <- Osun_wp_sf %>%\n  filter_at(vars(status,\n                 distance_to_primary_road,\n                 distance_to_secondary_road,\n                 distance_to_tertiary_road,\n                 distance_to_city,\n                 distance_to_town,\n                 water_point_population,\n                 local_population_1km,\n                 usage_capacity,\n                 is_urban,\n                 water_source_clean),\n            all_vars(!is.na(.))) %>%\n  mutate(usage_capacity = as.factor(usage_capacity))"
  },
  {
    "objectID": "In-class_Ex5/In-class_Ex5.html#correlation-analysis",
    "href": "In-class_Ex5/In-class_Ex5.html#correlation-analysis",
    "title": "In-class_Ex5: Modeling the Spatial Variation: the Explanatory Factors of Water Point Status using Geographical Weighted Logistic Regression",
    "section": "Correlation Analysis",
    "text": "Correlation Analysis\n\nOsun_wp <- Osun_wp_sf_clean %>%\n  select(c(7,35:39,42:43,46:47,57)) %>%\n  st_set_geometry(NULL)\n\n\ncluster_vars.cor = cor(\n  Osun_wp[,2:7])\ncorrplot.mixed(cluster_vars.cor,\n               lower = \"ellipse\",\n               upper = \"number\",\n               tl.pos = \"lt\",\n               diag = \"l\",\n               tl.col = \"black\")\n\n\n\n\n\nmodel <- glm(status ~ distance_to_primary_road\n             + distance_to_secondary_road +\n               distance_to_tertiary_road +\n               distance_to_city +\n               distance_to_town +\n               is_urban +\n               usage_capacity +\n               water_source_clean +\n               water_point_population +\n               local_population_1km,\n             data = Osun_wp_sf_clean,\n             family = binomial(link = 'logit'))\n\n\nblr_regress(model)\n\n                             Model Overview                              \n------------------------------------------------------------------------\nData Set    Resp Var    Obs.    Df. Model    Df. Residual    Convergence \n------------------------------------------------------------------------\n  data       status     4756      4755           4744           TRUE     \n------------------------------------------------------------------------\n\n                    Response Summary                     \n--------------------------------------------------------\nOutcome        Frequency        Outcome        Frequency \n--------------------------------------------------------\n   0             2114              1             2642    \n--------------------------------------------------------\n\n                                 Maximum Likelihood Estimates                                   \n-----------------------------------------------------------------------------------------------\n               Parameter                    DF    Estimate    Std. Error    z value     Pr(>|z|) \n-----------------------------------------------------------------------------------------------\n              (Intercept)                   1      0.3887        0.1124      3.4588       5e-04 \n        distance_to_primary_road            1      0.0000        0.0000     -0.7153      0.4744 \n       distance_to_secondary_road           1      0.0000        0.0000     -0.5530      0.5802 \n       distance_to_tertiary_road            1      1e-04         0.0000      4.6708      0.0000 \n            distance_to_city                1      0.0000        0.0000     -4.7574      0.0000 \n            distance_to_town                1      0.0000        0.0000     -4.9170      0.0000 \n              is_urbanTRUE                  1     -0.2971        0.0819     -3.6294       3e-04 \n           usage_capacity1000               1     -0.6230        0.0697     -8.9366      0.0000 \nwater_source_cleanProtected Shallow Well    1      0.5040        0.0857      5.8783      0.0000 \n   water_source_cleanProtected Spring       1      1.2882        0.4388      2.9359      0.0033 \n         water_point_population             1      -5e-04        0.0000    -11.3686      0.0000 \n          local_population_1km              1      3e-04         0.0000     19.2953      0.0000 \n-----------------------------------------------------------------------------------------------\n\n Association of Predicted Probabilities and Observed Responses  \n---------------------------------------------------------------\n% Concordant          0.7347          Somers' D        0.4693   \n% Discordant          0.2653          Gamma            0.4693   \n% Tied                0.0000          Tau-a            0.2318   \nPairs                5585188          c                0.7347   \n---------------------------------------------------------------\n\n\n\nreport(model)\n\nWe fitted a logistic model (estimated using ML) to predict status with\ndistance_to_primary_road (formula: status ~ distance_to_primary_road +\ndistance_to_secondary_road + distance_to_tertiary_road + distance_to_city +\ndistance_to_town + is_urban + usage_capacity + water_source_clean +\nwater_point_population + local_population_1km). The model's explanatory power\nis moderate (Tjur's R2 = 0.16). The model's intercept, corresponding to\ndistance_to_primary_road = 0, is at 0.39 (95% CI [0.17, 0.61], p < .001).\nWithin this model:\n\n  - The effect of distance to primary road is statistically non-significant and\nnegative (beta = -4.64e-06, 95% CI [-1.74e-05, 8.07e-06], p = 0.474; Std. beta\n= -0.03, 95% CI [-0.10, 0.05])\n  - The effect of distance to secondary road is statistically non-significant and\nnegative (beta = -5.14e-06, 95% CI [-2.34e-05, 1.31e-05], p = 0.580; Std. beta\n= -0.02, 95% CI [-0.09, 0.05])\n  - The effect of distance to tertiary road is statistically significant and\npositive (beta = 9.68e-05, 95% CI [5.64e-05, 1.38e-04], p < .001; Std. beta =\n0.16, 95% CI [0.09, 0.23])\n  - The effect of distance to city is statistically significant and negative\n(beta = -1.69e-05, 95% CI [-2.38e-05, -9.92e-06], p < .001; Std. beta = -0.18,\n95% CI [-0.26, -0.11])\n  - The effect of distance to town is statistically significant and negative\n(beta = -1.48e-05, 95% CI [-2.07e-05, -8.91e-06], p < .001; Std. beta = -0.18,\n95% CI [-0.26, -0.11])\n  - The effect of is urbanTRUE is statistically significant and negative (beta =\n-0.30, 95% CI [-0.46, -0.14], p < .001; Std. beta = -0.30, 95% CI [-0.46,\n-0.14])\n  - The effect of usage capacity [1000] is statistically significant and negative\n(beta = -0.62, 95% CI [-0.76, -0.49], p < .001; Std. beta = -0.62, 95% CI\n[-0.76, -0.49])\n  - The effect of water source clean [Protected Shallow Well] is statistically\nsignificant and positive (beta = 0.50, 95% CI [0.34, 0.67], p < .001; Std. beta\n= 0.50, 95% CI [0.34, 0.67])\n  - The effect of water source clean [Protected Spring] is statistically\nsignificant and positive (beta = 1.29, 95% CI [0.48, 2.23], p = 0.003; Std.\nbeta = 1.29, 95% CI [0.48, 2.23])\n  - The effect of water point population is statistically significant and\nnegative (beta = -5.10e-04, 95% CI [-6.01e-04, -4.26e-04], p < .001; Std. beta\n= -0.74, 95% CI [-0.88, -0.62])\n  - The effect of local population 1km is statistically significant and positive\n(beta = 3.45e-04, 95% CI [3.11e-04, 3.81e-04], p < .001; Std. beta = 1.45, 95%\nCI [1.30, 1.60])\n\nStandardized parameters were obtained by fitting the model on a standardized\nversion of the dataset. 95% Confidence Intervals (CIs) and p-values were\ncomputed using a Wald z-distribution approximation., We fitted a logistic model\n(estimated using ML) to predict status with distance_to_secondary_road\n(formula: status ~ distance_to_primary_road + distance_to_secondary_road +\ndistance_to_tertiary_road + distance_to_city + distance_to_town + is_urban +\nusage_capacity + water_source_clean + water_point_population +\nlocal_population_1km). The model's explanatory power is moderate (Tjur's R2 =\n0.16). The model's intercept, corresponding to distance_to_secondary_road = 0,\nis at 0.39 (95% CI [0.17, 0.61], p < .001). Within this model:\n\n  - The effect of distance to primary road is statistically non-significant and\nnegative (beta = -4.64e-06, 95% CI [-1.74e-05, 8.07e-06], p = 0.474; Std. beta\n= -0.03, 95% CI [-0.10, 0.05])\n  - The effect of distance to secondary road is statistically non-significant and\nnegative (beta = -5.14e-06, 95% CI [-2.34e-05, 1.31e-05], p = 0.580; Std. beta\n= -0.02, 95% CI [-0.09, 0.05])\n  - The effect of distance to tertiary road is statistically significant and\npositive (beta = 9.68e-05, 95% CI [5.64e-05, 1.38e-04], p < .001; Std. beta =\n0.16, 95% CI [0.09, 0.23])\n  - The effect of distance to city is statistically significant and negative\n(beta = -1.69e-05, 95% CI [-2.38e-05, -9.92e-06], p < .001; Std. beta = -0.18,\n95% CI [-0.26, -0.11])\n  - The effect of distance to town is statistically significant and negative\n(beta = -1.48e-05, 95% CI [-2.07e-05, -8.91e-06], p < .001; Std. beta = -0.18,\n95% CI [-0.26, -0.11])\n  - The effect of is urbanTRUE is statistically significant and negative (beta =\n-0.30, 95% CI [-0.46, -0.14], p < .001; Std. beta = -0.30, 95% CI [-0.46,\n-0.14])\n  - The effect of usage capacity [1000] is statistically significant and negative\n(beta = -0.62, 95% CI [-0.76, -0.49], p < .001; Std. beta = -0.62, 95% CI\n[-0.76, -0.49])\n  - The effect of water source clean [Protected Shallow Well] is statistically\nsignificant and positive (beta = 0.50, 95% CI [0.34, 0.67], p < .001; Std. beta\n= 0.50, 95% CI [0.34, 0.67])\n  - The effect of water source clean [Protected Spring] is statistically\nsignificant and positive (beta = 1.29, 95% CI [0.48, 2.23], p = 0.003; Std.\nbeta = 1.29, 95% CI [0.48, 2.23])\n  - The effect of water point population is statistically significant and\nnegative (beta = -5.10e-04, 95% CI [-6.01e-04, -4.26e-04], p < .001; Std. beta\n= -0.74, 95% CI [-0.88, -0.62])\n  - The effect of local population 1km is statistically significant and positive\n(beta = 3.45e-04, 95% CI [3.11e-04, 3.81e-04], p < .001; Std. beta = 1.45, 95%\nCI [1.30, 1.60])\n\nStandardized parameters were obtained by fitting the model on a standardized\nversion of the dataset. 95% Confidence Intervals (CIs) and p-values were\ncomputed using a Wald z-distribution approximation., We fitted a logistic model\n(estimated using ML) to predict status with distance_to_tertiary_road (formula:\nstatus ~ distance_to_primary_road + distance_to_secondary_road +\ndistance_to_tertiary_road + distance_to_city + distance_to_town + is_urban +\nusage_capacity + water_source_clean + water_point_population +\nlocal_population_1km). The model's explanatory power is moderate (Tjur's R2 =\n0.16). The model's intercept, corresponding to distance_to_tertiary_road = 0,\nis at 0.39 (95% CI [0.17, 0.61], p < .001). Within this model:\n\n  - The effect of distance to primary road is statistically non-significant and\nnegative (beta = -4.64e-06, 95% CI [-1.74e-05, 8.07e-06], p = 0.474; Std. beta\n= -0.03, 95% CI [-0.10, 0.05])\n  - The effect of distance to secondary road is statistically non-significant and\nnegative (beta = -5.14e-06, 95% CI [-2.34e-05, 1.31e-05], p = 0.580; Std. beta\n= -0.02, 95% CI [-0.09, 0.05])\n  - The effect of distance to tertiary road is statistically significant and\npositive (beta = 9.68e-05, 95% CI [5.64e-05, 1.38e-04], p < .001; Std. beta =\n0.16, 95% CI [0.09, 0.23])\n  - The effect of distance to city is statistically significant and negative\n(beta = -1.69e-05, 95% CI [-2.38e-05, -9.92e-06], p < .001; Std. beta = -0.18,\n95% CI [-0.26, -0.11])\n  - The effect of distance to town is statistically significant and negative\n(beta = -1.48e-05, 95% CI [-2.07e-05, -8.91e-06], p < .001; Std. beta = -0.18,\n95% CI [-0.26, -0.11])\n  - The effect of is urbanTRUE is statistically significant and negative (beta =\n-0.30, 95% CI [-0.46, -0.14], p < .001; Std. beta = -0.30, 95% CI [-0.46,\n-0.14])\n  - The effect of usage capacity [1000] is statistically significant and negative\n(beta = -0.62, 95% CI [-0.76, -0.49], p < .001; Std. beta = -0.62, 95% CI\n[-0.76, -0.49])\n  - The effect of water source clean [Protected Shallow Well] is statistically\nsignificant and positive (beta = 0.50, 95% CI [0.34, 0.67], p < .001; Std. beta\n= 0.50, 95% CI [0.34, 0.67])\n  - The effect of water source clean [Protected Spring] is statistically\nsignificant and positive (beta = 1.29, 95% CI [0.48, 2.23], p = 0.003; Std.\nbeta = 1.29, 95% CI [0.48, 2.23])\n  - The effect of water point population is statistically significant and\nnegative (beta = -5.10e-04, 95% CI [-6.01e-04, -4.26e-04], p < .001; Std. beta\n= -0.74, 95% CI [-0.88, -0.62])\n  - The effect of local population 1km is statistically significant and positive\n(beta = 3.45e-04, 95% CI [3.11e-04, 3.81e-04], p < .001; Std. beta = 1.45, 95%\nCI [1.30, 1.60])\n\nStandardized parameters were obtained by fitting the model on a standardized\nversion of the dataset. 95% Confidence Intervals (CIs) and p-values were\ncomputed using a Wald z-distribution approximation., We fitted a logistic model\n(estimated using ML) to predict status with distance_to_city (formula: status ~\ndistance_to_primary_road + distance_to_secondary_road +\ndistance_to_tertiary_road + distance_to_city + distance_to_town + is_urban +\nusage_capacity + water_source_clean + water_point_population +\nlocal_population_1km). The model's explanatory power is moderate (Tjur's R2 =\n0.16). The model's intercept, corresponding to distance_to_city = 0, is at 0.39\n(95% CI [0.17, 0.61], p < .001). Within this model:\n\n  - The effect of distance to primary road is statistically non-significant and\nnegative (beta = -4.64e-06, 95% CI [-1.74e-05, 8.07e-06], p = 0.474; Std. beta\n= -0.03, 95% CI [-0.10, 0.05])\n  - The effect of distance to secondary road is statistically non-significant and\nnegative (beta = -5.14e-06, 95% CI [-2.34e-05, 1.31e-05], p = 0.580; Std. beta\n= -0.02, 95% CI [-0.09, 0.05])\n  - The effect of distance to tertiary road is statistically significant and\npositive (beta = 9.68e-05, 95% CI [5.64e-05, 1.38e-04], p < .001; Std. beta =\n0.16, 95% CI [0.09, 0.23])\n  - The effect of distance to city is statistically significant and negative\n(beta = -1.69e-05, 95% CI [-2.38e-05, -9.92e-06], p < .001; Std. beta = -0.18,\n95% CI [-0.26, -0.11])\n  - The effect of distance to town is statistically significant and negative\n(beta = -1.48e-05, 95% CI [-2.07e-05, -8.91e-06], p < .001; Std. beta = -0.18,\n95% CI [-0.26, -0.11])\n  - The effect of is urbanTRUE is statistically significant and negative (beta =\n-0.30, 95% CI [-0.46, -0.14], p < .001; Std. beta = -0.30, 95% CI [-0.46,\n-0.14])\n  - The effect of usage capacity [1000] is statistically significant and negative\n(beta = -0.62, 95% CI [-0.76, -0.49], p < .001; Std. beta = -0.62, 95% CI\n[-0.76, -0.49])\n  - The effect of water source clean [Protected Shallow Well] is statistically\nsignificant and positive (beta = 0.50, 95% CI [0.34, 0.67], p < .001; Std. beta\n= 0.50, 95% CI [0.34, 0.67])\n  - The effect of water source clean [Protected Spring] is statistically\nsignificant and positive (beta = 1.29, 95% CI [0.48, 2.23], p = 0.003; Std.\nbeta = 1.29, 95% CI [0.48, 2.23])\n  - The effect of water point population is statistically significant and\nnegative (beta = -5.10e-04, 95% CI [-6.01e-04, -4.26e-04], p < .001; Std. beta\n= -0.74, 95% CI [-0.88, -0.62])\n  - The effect of local population 1km is statistically significant and positive\n(beta = 3.45e-04, 95% CI [3.11e-04, 3.81e-04], p < .001; Std. beta = 1.45, 95%\nCI [1.30, 1.60])\n\nStandardized parameters were obtained by fitting the model on a standardized\nversion of the dataset. 95% Confidence Intervals (CIs) and p-values were\ncomputed using a Wald z-distribution approximation., We fitted a logistic model\n(estimated using ML) to predict status with distance_to_town (formula: status ~\ndistance_to_primary_road + distance_to_secondary_road +\ndistance_to_tertiary_road + distance_to_city + distance_to_town + is_urban +\nusage_capacity + water_source_clean + water_point_population +\nlocal_population_1km). The model's explanatory power is moderate (Tjur's R2 =\n0.16). The model's intercept, corresponding to distance_to_town = 0, is at 0.39\n(95% CI [0.17, 0.61], p < .001). Within this model:\n\n  - The effect of distance to primary road is statistically non-significant and\nnegative (beta = -4.64e-06, 95% CI [-1.74e-05, 8.07e-06], p = 0.474; Std. beta\n= -0.03, 95% CI [-0.10, 0.05])\n  - The effect of distance to secondary road is statistically non-significant and\nnegative (beta = -5.14e-06, 95% CI [-2.34e-05, 1.31e-05], p = 0.580; Std. beta\n= -0.02, 95% CI [-0.09, 0.05])\n  - The effect of distance to tertiary road is statistically significant and\npositive (beta = 9.68e-05, 95% CI [5.64e-05, 1.38e-04], p < .001; Std. beta =\n0.16, 95% CI [0.09, 0.23])\n  - The effect of distance to city is statistically significant and negative\n(beta = -1.69e-05, 95% CI [-2.38e-05, -9.92e-06], p < .001; Std. beta = -0.18,\n95% CI [-0.26, -0.11])\n  - The effect of distance to town is statistically significant and negative\n(beta = -1.48e-05, 95% CI [-2.07e-05, -8.91e-06], p < .001; Std. beta = -0.18,\n95% CI [-0.26, -0.11])\n  - The effect of is urbanTRUE is statistically significant and negative (beta =\n-0.30, 95% CI [-0.46, -0.14], p < .001; Std. beta = -0.30, 95% CI [-0.46,\n-0.14])\n  - The effect of usage capacity [1000] is statistically significant and negative\n(beta = -0.62, 95% CI [-0.76, -0.49], p < .001; Std. beta = -0.62, 95% CI\n[-0.76, -0.49])\n  - The effect of water source clean [Protected Shallow Well] is statistically\nsignificant and positive (beta = 0.50, 95% CI [0.34, 0.67], p < .001; Std. beta\n= 0.50, 95% CI [0.34, 0.67])\n  - The effect of water source clean [Protected Spring] is statistically\nsignificant and positive (beta = 1.29, 95% CI [0.48, 2.23], p = 0.003; Std.\nbeta = 1.29, 95% CI [0.48, 2.23])\n  - The effect of water point population is statistically significant and\nnegative (beta = -5.10e-04, 95% CI [-6.01e-04, -4.26e-04], p < .001; Std. beta\n= -0.74, 95% CI [-0.88, -0.62])\n  - The effect of local population 1km is statistically significant and positive\n(beta = 3.45e-04, 95% CI [3.11e-04, 3.81e-04], p < .001; Std. beta = 1.45, 95%\nCI [1.30, 1.60])\n\nStandardized parameters were obtained by fitting the model on a standardized\nversion of the dataset. 95% Confidence Intervals (CIs) and p-values were\ncomputed using a Wald z-distribution approximation., We fitted a logistic model\n(estimated using ML) to predict status with is_urban (formula: status ~\ndistance_to_primary_road + distance_to_secondary_road +\ndistance_to_tertiary_road + distance_to_city + distance_to_town + is_urban +\nusage_capacity + water_source_clean + water_point_population +\nlocal_population_1km). The model's explanatory power is moderate (Tjur's R2 =\n0.16). The model's intercept, corresponding to is_urban = [?], is at 0.39 (95%\nCI [0.17, 0.61], p < .001). Within this model:\n\n  - The effect of distance to primary road is statistically non-significant and\nnegative (beta = -4.64e-06, 95% CI [-1.74e-05, 8.07e-06], p = 0.474; Std. beta\n= -0.03, 95% CI [-0.10, 0.05])\n  - The effect of distance to secondary road is statistically non-significant and\nnegative (beta = -5.14e-06, 95% CI [-2.34e-05, 1.31e-05], p = 0.580; Std. beta\n= -0.02, 95% CI [-0.09, 0.05])\n  - The effect of distance to tertiary road is statistically significant and\npositive (beta = 9.68e-05, 95% CI [5.64e-05, 1.38e-04], p < .001; Std. beta =\n0.16, 95% CI [0.09, 0.23])\n  - The effect of distance to city is statistically significant and negative\n(beta = -1.69e-05, 95% CI [-2.38e-05, -9.92e-06], p < .001; Std. beta = -0.18,\n95% CI [-0.26, -0.11])\n  - The effect of distance to town is statistically significant and negative\n(beta = -1.48e-05, 95% CI [-2.07e-05, -8.91e-06], p < .001; Std. beta = -0.18,\n95% CI [-0.26, -0.11])\n  - The effect of is urbanTRUE is statistically significant and negative (beta =\n-0.30, 95% CI [-0.46, -0.14], p < .001; Std. beta = -0.30, 95% CI [-0.46,\n-0.14])\n  - The effect of usage capacity [1000] is statistically significant and negative\n(beta = -0.62, 95% CI [-0.76, -0.49], p < .001; Std. beta = -0.62, 95% CI\n[-0.76, -0.49])\n  - The effect of water source clean [Protected Shallow Well] is statistically\nsignificant and positive (beta = 0.50, 95% CI [0.34, 0.67], p < .001; Std. beta\n= 0.50, 95% CI [0.34, 0.67])\n  - The effect of water source clean [Protected Spring] is statistically\nsignificant and positive (beta = 1.29, 95% CI [0.48, 2.23], p = 0.003; Std.\nbeta = 1.29, 95% CI [0.48, 2.23])\n  - The effect of water point population is statistically significant and\nnegative (beta = -5.10e-04, 95% CI [-6.01e-04, -4.26e-04], p < .001; Std. beta\n= -0.74, 95% CI [-0.88, -0.62])\n  - The effect of local population 1km is statistically significant and positive\n(beta = 3.45e-04, 95% CI [3.11e-04, 3.81e-04], p < .001; Std. beta = 1.45, 95%\nCI [1.30, 1.60])\n\nStandardized parameters were obtained by fitting the model on a standardized\nversion of the dataset. 95% Confidence Intervals (CIs) and p-values were\ncomputed using a Wald z-distribution approximation., We fitted a logistic model\n(estimated using ML) to predict status with usage_capacity (formula: status ~\ndistance_to_primary_road + distance_to_secondary_road +\ndistance_to_tertiary_road + distance_to_city + distance_to_town + is_urban +\nusage_capacity + water_source_clean + water_point_population +\nlocal_population_1km). The model's explanatory power is moderate (Tjur's R2 =\n0.16). The model's intercept, corresponding to usage_capacity = 300, is at 0.39\n(95% CI [0.17, 0.61], p < .001). Within this model:\n\n  - The effect of distance to primary road is statistically non-significant and\nnegative (beta = -4.64e-06, 95% CI [-1.74e-05, 8.07e-06], p = 0.474; Std. beta\n= -0.03, 95% CI [-0.10, 0.05])\n  - The effect of distance to secondary road is statistically non-significant and\nnegative (beta = -5.14e-06, 95% CI [-2.34e-05, 1.31e-05], p = 0.580; Std. beta\n= -0.02, 95% CI [-0.09, 0.05])\n  - The effect of distance to tertiary road is statistically significant and\npositive (beta = 9.68e-05, 95% CI [5.64e-05, 1.38e-04], p < .001; Std. beta =\n0.16, 95% CI [0.09, 0.23])\n  - The effect of distance to city is statistically significant and negative\n(beta = -1.69e-05, 95% CI [-2.38e-05, -9.92e-06], p < .001; Std. beta = -0.18,\n95% CI [-0.26, -0.11])\n  - The effect of distance to town is statistically significant and negative\n(beta = -1.48e-05, 95% CI [-2.07e-05, -8.91e-06], p < .001; Std. beta = -0.18,\n95% CI [-0.26, -0.11])\n  - The effect of is urbanTRUE is statistically significant and negative (beta =\n-0.30, 95% CI [-0.46, -0.14], p < .001; Std. beta = -0.30, 95% CI [-0.46,\n-0.14])\n  - The effect of usage capacity [1000] is statistically significant and negative\n(beta = -0.62, 95% CI [-0.76, -0.49], p < .001; Std. beta = -0.62, 95% CI\n[-0.76, -0.49])\n  - The effect of water source clean [Protected Shallow Well] is statistically\nsignificant and positive (beta = 0.50, 95% CI [0.34, 0.67], p < .001; Std. beta\n= 0.50, 95% CI [0.34, 0.67])\n  - The effect of water source clean [Protected Spring] is statistically\nsignificant and positive (beta = 1.29, 95% CI [0.48, 2.23], p = 0.003; Std.\nbeta = 1.29, 95% CI [0.48, 2.23])\n  - The effect of water point population is statistically significant and\nnegative (beta = -5.10e-04, 95% CI [-6.01e-04, -4.26e-04], p < .001; Std. beta\n= -0.74, 95% CI [-0.88, -0.62])\n  - The effect of local population 1km is statistically significant and positive\n(beta = 3.45e-04, 95% CI [3.11e-04, 3.81e-04], p < .001; Std. beta = 1.45, 95%\nCI [1.30, 1.60])\n\nStandardized parameters were obtained by fitting the model on a standardized\nversion of the dataset. 95% Confidence Intervals (CIs) and p-values were\ncomputed using a Wald z-distribution approximation., We fitted a logistic model\n(estimated using ML) to predict status with water_source_clean (formula: status\n~ distance_to_primary_road + distance_to_secondary_road +\ndistance_to_tertiary_road + distance_to_city + distance_to_town + is_urban +\nusage_capacity + water_source_clean + water_point_population +\nlocal_population_1km). The model's explanatory power is moderate (Tjur's R2 =\n0.16). The model's intercept, corresponding to water_source_clean = Borehole,\nis at 0.39 (95% CI [0.17, 0.61], p < .001). Within this model:\n\n  - The effect of distance to primary road is statistically non-significant and\nnegative (beta = -4.64e-06, 95% CI [-1.74e-05, 8.07e-06], p = 0.474; Std. beta\n= -0.03, 95% CI [-0.10, 0.05])\n  - The effect of distance to secondary road is statistically non-significant and\nnegative (beta = -5.14e-06, 95% CI [-2.34e-05, 1.31e-05], p = 0.580; Std. beta\n= -0.02, 95% CI [-0.09, 0.05])\n  - The effect of distance to tertiary road is statistically significant and\npositive (beta = 9.68e-05, 95% CI [5.64e-05, 1.38e-04], p < .001; Std. beta =\n0.16, 95% CI [0.09, 0.23])\n  - The effect of distance to city is statistically significant and negative\n(beta = -1.69e-05, 95% CI [-2.38e-05, -9.92e-06], p < .001; Std. beta = -0.18,\n95% CI [-0.26, -0.11])\n  - The effect of distance to town is statistically significant and negative\n(beta = -1.48e-05, 95% CI [-2.07e-05, -8.91e-06], p < .001; Std. beta = -0.18,\n95% CI [-0.26, -0.11])\n  - The effect of is urbanTRUE is statistically significant and negative (beta =\n-0.30, 95% CI [-0.46, -0.14], p < .001; Std. beta = -0.30, 95% CI [-0.46,\n-0.14])\n  - The effect of usage capacity [1000] is statistically significant and negative\n(beta = -0.62, 95% CI [-0.76, -0.49], p < .001; Std. beta = -0.62, 95% CI\n[-0.76, -0.49])\n  - The effect of water source clean [Protected Shallow Well] is statistically\nsignificant and positive (beta = 0.50, 95% CI [0.34, 0.67], p < .001; Std. beta\n= 0.50, 95% CI [0.34, 0.67])\n  - The effect of water source clean [Protected Spring] is statistically\nsignificant and positive (beta = 1.29, 95% CI [0.48, 2.23], p = 0.003; Std.\nbeta = 1.29, 95% CI [0.48, 2.23])\n  - The effect of water point population is statistically significant and\nnegative (beta = -5.10e-04, 95% CI [-6.01e-04, -4.26e-04], p < .001; Std. beta\n= -0.74, 95% CI [-0.88, -0.62])\n  - The effect of local population 1km is statistically significant and positive\n(beta = 3.45e-04, 95% CI [3.11e-04, 3.81e-04], p < .001; Std. beta = 1.45, 95%\nCI [1.30, 1.60])\n\nStandardized parameters were obtained by fitting the model on a standardized\nversion of the dataset. 95% Confidence Intervals (CIs) and p-values were\ncomputed using a Wald z-distribution approximation., We fitted a logistic model\n(estimated using ML) to predict status with water_point_population (formula:\nstatus ~ distance_to_primary_road + distance_to_secondary_road +\ndistance_to_tertiary_road + distance_to_city + distance_to_town + is_urban +\nusage_capacity + water_source_clean + water_point_population +\nlocal_population_1km). The model's explanatory power is moderate (Tjur's R2 =\n0.16). The model's intercept, corresponding to water_point_population = 0, is\nat 0.39 (95% CI [0.17, 0.61], p < .001). Within this model:\n\n  - The effect of distance to primary road is statistically non-significant and\nnegative (beta = -4.64e-06, 95% CI [-1.74e-05, 8.07e-06], p = 0.474; Std. beta\n= -0.03, 95% CI [-0.10, 0.05])\n  - The effect of distance to secondary road is statistically non-significant and\nnegative (beta = -5.14e-06, 95% CI [-2.34e-05, 1.31e-05], p = 0.580; Std. beta\n= -0.02, 95% CI [-0.09, 0.05])\n  - The effect of distance to tertiary road is statistically significant and\npositive (beta = 9.68e-05, 95% CI [5.64e-05, 1.38e-04], p < .001; Std. beta =\n0.16, 95% CI [0.09, 0.23])\n  - The effect of distance to city is statistically significant and negative\n(beta = -1.69e-05, 95% CI [-2.38e-05, -9.92e-06], p < .001; Std. beta = -0.18,\n95% CI [-0.26, -0.11])\n  - The effect of distance to town is statistically significant and negative\n(beta = -1.48e-05, 95% CI [-2.07e-05, -8.91e-06], p < .001; Std. beta = -0.18,\n95% CI [-0.26, -0.11])\n  - The effect of is urbanTRUE is statistically significant and negative (beta =\n-0.30, 95% CI [-0.46, -0.14], p < .001; Std. beta = -0.30, 95% CI [-0.46,\n-0.14])\n  - The effect of usage capacity [1000] is statistically significant and negative\n(beta = -0.62, 95% CI [-0.76, -0.49], p < .001; Std. beta = -0.62, 95% CI\n[-0.76, -0.49])\n  - The effect of water source clean [Protected Shallow Well] is statistically\nsignificant and positive (beta = 0.50, 95% CI [0.34, 0.67], p < .001; Std. beta\n= 0.50, 95% CI [0.34, 0.67])\n  - The effect of water source clean [Protected Spring] is statistically\nsignificant and positive (beta = 1.29, 95% CI [0.48, 2.23], p = 0.003; Std.\nbeta = 1.29, 95% CI [0.48, 2.23])\n  - The effect of water point population is statistically significant and\nnegative (beta = -5.10e-04, 95% CI [-6.01e-04, -4.26e-04], p < .001; Std. beta\n= -0.74, 95% CI [-0.88, -0.62])\n  - The effect of local population 1km is statistically significant and positive\n(beta = 3.45e-04, 95% CI [3.11e-04, 3.81e-04], p < .001; Std. beta = 1.45, 95%\nCI [1.30, 1.60])\n\nStandardized parameters were obtained by fitting the model on a standardized\nversion of the dataset. 95% Confidence Intervals (CIs) and p-values were\ncomputed using a Wald z-distribution approximation. and We fitted a logistic\nmodel (estimated using ML) to predict status with local_population_1km\n(formula: status ~ distance_to_primary_road + distance_to_secondary_road +\ndistance_to_tertiary_road + distance_to_city + distance_to_town + is_urban +\nusage_capacity + water_source_clean + water_point_population +\nlocal_population_1km). The model's explanatory power is moderate (Tjur's R2 =\n0.16). The model's intercept, corresponding to local_population_1km = 0, is at\n0.39 (95% CI [0.17, 0.61], p < .001). Within this model:\n\n  - The effect of distance to primary road is statistically non-significant and\nnegative (beta = -4.64e-06, 95% CI [-1.74e-05, 8.07e-06], p = 0.474; Std. beta\n= -0.03, 95% CI [-0.10, 0.05])\n  - The effect of distance to secondary road is statistically non-significant and\nnegative (beta = -5.14e-06, 95% CI [-2.34e-05, 1.31e-05], p = 0.580; Std. beta\n= -0.02, 95% CI [-0.09, 0.05])\n  - The effect of distance to tertiary road is statistically significant and\npositive (beta = 9.68e-05, 95% CI [5.64e-05, 1.38e-04], p < .001; Std. beta =\n0.16, 95% CI [0.09, 0.23])\n  - The effect of distance to city is statistically significant and negative\n(beta = -1.69e-05, 95% CI [-2.38e-05, -9.92e-06], p < .001; Std. beta = -0.18,\n95% CI [-0.26, -0.11])\n  - The effect of distance to town is statistically significant and negative\n(beta = -1.48e-05, 95% CI [-2.07e-05, -8.91e-06], p < .001; Std. beta = -0.18,\n95% CI [-0.26, -0.11])\n  - The effect of is urbanTRUE is statistically significant and negative (beta =\n-0.30, 95% CI [-0.46, -0.14], p < .001; Std. beta = -0.30, 95% CI [-0.46,\n-0.14])\n  - The effect of usage capacity [1000] is statistically significant and negative\n(beta = -0.62, 95% CI [-0.76, -0.49], p < .001; Std. beta = -0.62, 95% CI\n[-0.76, -0.49])\n  - The effect of water source clean [Protected Shallow Well] is statistically\nsignificant and positive (beta = 0.50, 95% CI [0.34, 0.67], p < .001; Std. beta\n= 0.50, 95% CI [0.34, 0.67])\n  - The effect of water source clean [Protected Spring] is statistically\nsignificant and positive (beta = 1.29, 95% CI [0.48, 2.23], p = 0.003; Std.\nbeta = 1.29, 95% CI [0.48, 2.23])\n  - The effect of water point population is statistically significant and\nnegative (beta = -5.10e-04, 95% CI [-6.01e-04, -4.26e-04], p < .001; Std. beta\n= -0.74, 95% CI [-0.88, -0.62])\n  - The effect of local population 1km is statistically significant and positive\n(beta = 3.45e-04, 95% CI [3.11e-04, 3.81e-04], p < .001; Std. beta = 1.45, 95%\nCI [1.30, 1.60])\n\nStandardized parameters were obtained by fitting the model on a standardized\nversion of the dataset. 95% Confidence Intervals (CIs) and p-values were\ncomputed using a Wald z-distribution approximation.\n\n\n\nblr_confusion_matrix(model, cutoff = 0.5)\n\nConfusion Matrix and Statistics \n\n          Reference\nPrediction FALSE TRUE\n         0  1301  738\n         1   813 1904\n\n                Accuracy : 0.6739 \n     No Information Rate : 0.4445 \n\n                   Kappa : 0.3373 \n\nMcNemars's Test P-Value  : 0.0602 \n\n             Sensitivity : 0.7207 \n             Specificity : 0.6154 \n          Pos Pred Value : 0.7008 \n          Neg Pred Value : 0.6381 \n              Prevalence : 0.5555 \n          Detection Rate : 0.4003 \n    Detection Prevalence : 0.5713 \n       Balanced Accuracy : 0.6680 \n               Precision : 0.7008 \n                  Recall : 0.7207 \n\n        'Positive' Class : 1\n\n\n\nOsun_wp_sp <- Osun_wp_sf_clean %>%\n  select(c(status,\n           distance_to_primary_road,\n           distance_to_secondary_road,\n           distance_to_tertiary_road,\n           distance_to_city,\n           distance_to_town,\n           water_point_population,\n           local_population_1km,\n           is_urban,\n           usage_capacity,\n           water_source_clean)) %>%\n  as_Spatial()\nOsun_wp_sp\n\nclass       : SpatialPointsDataFrame \nfeatures    : 4756 \nextent      : 182502.4, 290751, 340054.1, 450905.3  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=4 +lon_0=8.5 +k=0.99975 +x_0=670553.98 +y_0=0 +a=6378249.145 +rf=293.465 +towgs84=-92,-93,122,0,0,0,0 +units=m +no_defs \nvariables   : 11\nnames       : status, distance_to_primary_road, distance_to_secondary_road, distance_to_tertiary_road, distance_to_city, distance_to_town, water_point_population, local_population_1km, is_urban, usage_capacity, water_source_clean \nmin values  :      0,        0.014461356813335,          0.152195902540837,         0.017815121653488, 53.0461399623541, 30.0019777713073,                      0,                    0,        0,           1000,           Borehole \nmax values  :      1,         26909.8616132094,           19559.4793799085,          10966.2705628969,  47934.343603562, 44020.6393368124,                  29697,                36118,        1,            300,   Protected Spring \n\n\n\nbw.fixed <- bw.ggwr(status ~\n  distance_to_primary_road +\n  distance_to_secondary_road +\n  distance_to_tertiary_road +\n  distance_to_city +\n  distance_to_town +\n  water_point_population +\n  local_population_1km +\n  is_urban +\n  usage_capacity +\n  water_source_clean,\ndata = Osun_wp_sp,\nfamily = \"binomial\",\napproach = \"AIC\",\nkernel = \"gaussian\",\nadaptive = FALSE,\nlonglat = FALSE)\n\nTake a cup of tea and have a break, it will take a few minutes.\n          -----A kind suggestion from GWmodel development group\n Iteration    Log-Likelihood:(With bandwidth:  95768.67 )\n=========================\n       0        -2889 \n       1        -2836 \n       2        -2830 \n       3        -2829 \n       4        -2829 \n       5        -2829 \nFixed bandwidth: 95768.67 AICc value: 5684.357 \n Iteration    Log-Likelihood:(With bandwidth:  59200.13 )\n=========================\n       0        -2875 \n       1        -2818 \n       2        -2810 \n       3        -2808 \n       4        -2808 \n       5        -2808 \nFixed bandwidth: 59200.13 AICc value: 5646.785 \n Iteration    Log-Likelihood:(With bandwidth:  36599.53 )\n=========================\n       0        -2847 \n       1        -2781 \n       2        -2768 \n       3        -2765 \n       4        -2765 \n       5        -2765 \n       6        -2765 \nFixed bandwidth: 36599.53 AICc value: 5575.148 \n Iteration    Log-Likelihood:(With bandwidth:  22631.59 )\n=========================\n       0        -2798 \n       1        -2719 \n       2        -2698 \n       3        -2693 \n       4        -2693 \n       5        -2693 \n       6        -2693 \nFixed bandwidth: 22631.59 AICc value: 5466.883 \n Iteration    Log-Likelihood:(With bandwidth:  13998.93 )\n=========================\n       0        -2720 \n       1        -2622 \n       2        -2590 \n       3        -2581 \n       4        -2580 \n       5        -2580 \n       6        -2580 \n       7        -2580 \nFixed bandwidth: 13998.93 AICc value: 5324.578 \n Iteration    Log-Likelihood:(With bandwidth:  8663.649 )\n=========================\n       0        -2601 \n       1        -2476 \n       2        -2431 \n       3        -2419 \n       4        -2417 \n       5        -2417 \n       6        -2417 \n       7        -2417 \nFixed bandwidth: 8663.649 AICc value: 5163.61 \n Iteration    Log-Likelihood:(With bandwidth:  5366.266 )\n=========================\n       0        -2436 \n       1        -2268 \n       2        -2194 \n       3        -2167 \n       4        -2161 \n       5        -2161 \n       6        -2161 \n       7        -2161 \n       8        -2161 \n       9        -2161 \nFixed bandwidth: 5366.266 AICc value: 4990.587 \n Iteration    Log-Likelihood:(With bandwidth:  3328.371 )\n=========================\n       0        -2157 \n       1        -1922 \n       2        -1802 \n       3        -1739 \n       4        -1713 \n       5        -1713 \nFixed bandwidth: 3328.371 AICc value: 4798.288 \n Iteration    Log-Likelihood:(With bandwidth:  2068.882 )\n=========================\n       0        -1751 \n       1        -1421 \n       2        -1238 \n       3        -1133 \n       4        -1084 \n       5        -1084 \nFixed bandwidth: 2068.882 AICc value: 4837.017 \n Iteration    Log-Likelihood:(With bandwidth:  4106.777 )\n=========================\n       0        -2297 \n       1        -2095 \n       2        -1997 \n       3        -1951 \n       4        -1938 \n       5        -1936 \n       6        -1936 \n       7        -1936 \n       8        -1936 \nFixed bandwidth: 4106.777 AICc value: 4873.161 \n Iteration    Log-Likelihood:(With bandwidth:  2847.289 )\n=========================\n       0        -2036 \n       1        -1771 \n       2        -1633 \n       3        -1558 \n       4        -1525 \n       5        -1525 \nFixed bandwidth: 2847.289 AICc value: 4768.192 \n Iteration    Log-Likelihood:(With bandwidth:  2549.964 )\n=========================\n       0        -1941 \n       1        -1655 \n       2        -1503 \n       3        -1417 \n       4        -1378 \n       5        -1378 \nFixed bandwidth: 2549.964 AICc value: 4762.212 \n Iteration    Log-Likelihood:(With bandwidth:  2366.207 )\n=========================\n       0        -1874 \n       1        -1573 \n       2        -1410 \n       3        -1316 \n       4        -1274 \n       5        -1274 \nFixed bandwidth: 2366.207 AICc value: 4773.081 \n Iteration    Log-Likelihood:(With bandwidth:  2663.532 )\n=========================\n       0        -1979 \n       1        -1702 \n       2        -1555 \n       3        -1474 \n       4        -1438 \n       5        -1438 \nFixed bandwidth: 2663.532 AICc value: 4762.568 \n Iteration    Log-Likelihood:(With bandwidth:  2479.775 )\n=========================\n       0        -1917 \n       1        -1625 \n       2        -1468 \n       3        -1380 \n       4        -1339 \n       5        -1339 \nFixed bandwidth: 2479.775 AICc value: 4764.294 \n Iteration    Log-Likelihood:(With bandwidth:  2593.343 )\n=========================\n       0        -1956 \n       1        -1674 \n       2        -1523 \n       3        -1439 \n       4        -1401 \n       5        -1401 \nFixed bandwidth: 2593.343 AICc value: 4761.813 \n Iteration    Log-Likelihood:(With bandwidth:  2620.153 )\n=========================\n       0        -1965 \n       1        -1685 \n       2        -1536 \n       3        -1453 \n       4        -1415 \n       5        -1415 \nFixed bandwidth: 2620.153 AICc value: 4761.89 \n Iteration    Log-Likelihood:(With bandwidth:  2576.774 )\n=========================\n       0        -1950 \n       1        -1667 \n       2        -1515 \n       3        -1431 \n       4        -1393 \n       5        -1393 \nFixed bandwidth: 2576.774 AICc value: 4761.889 \n Iteration    Log-Likelihood:(With bandwidth:  2603.584 )\n=========================\n       0        -1960 \n       1        -1678 \n       2        -1528 \n       3        -1445 \n       4        -1407 \n       5        -1407 \nFixed bandwidth: 2603.584 AICc value: 4761.813 \n Iteration    Log-Likelihood:(With bandwidth:  2609.913 )\n=========================\n       0        -1962 \n       1        -1680 \n       2        -1531 \n       3        -1448 \n       4        -1410 \n       5        -1410 \nFixed bandwidth: 2609.913 AICc value: 4761.831 \n Iteration    Log-Likelihood:(With bandwidth:  2599.672 )\n=========================\n       0        -1958 \n       1        -1676 \n       2        -1526 \n       3        -1443 \n       4        -1405 \n       5        -1405 \nFixed bandwidth: 2599.672 AICc value: 4761.809 \n Iteration    Log-Likelihood:(With bandwidth:  2597.255 )\n=========================\n       0        -1957 \n       1        -1675 \n       2        -1525 \n       3        -1441 \n       4        -1403 \n       5        -1403 \nFixed bandwidth: 2597.255 AICc value: 4761.809 \n\n\n\nbw.fixed\n\n[1] 2599.672\n\n\n\ngwlr.fixed <- ggwr.basic(status ~\n                           distance_to_primary_road +\n                           distance_to_secondary_road +\n                           distance_to_tertiary_road +\n                           distance_to_city +\n                           distance_to_town +\n                           water_point_population +\n                           local_population_1km +\n                           usage_capacity +\n                           is_urban +\n                           water_source_clean,\n                         data = Osun_wp_sp,\n                         bw = 2597.255,\n                         family = \"binomial\",\n                         kernel = \"gaussian\",\n                         adaptive = FALSE,\n                         longlat = FALSE)\n\n Iteration    Log-Likelihood\n=========================\n       0        -1957 \n       1        -1675 \n       2        -1525 \n       3        -1441 \n       4        -1403 \n       5        -1403"
  },
  {
    "objectID": "In-class_Ex5/In-class_Ex5.html#converting-sdf-into-sf-data.frame",
    "href": "In-class_Ex5/In-class_Ex5.html#converting-sdf-into-sf-data.frame",
    "title": "In-class_Ex5: Modeling the Spatial Variation: the Explanatory Factors of Water Point Status using Geographical Weighted Logistic Regression",
    "section": "Converting SDF into sf data.frame",
    "text": "Converting SDF into sf data.frame\nTo assess the performance of the gwLR, firstly, we will convert the SDF object in as data frame by using the code chunck below\n\ngwr.fixed <- as.data.frame(gwlr.fixed$SDF)\n\nNext, we will label yhat values greater or equal to 0.5 into 1 and else 0. The result of the logic comparison operation will be saved into a field called most.\n\ngwr.fixed <- gwr.fixed %>%\n  mutate(most = ifelse(\n    gwr.fixed$yhat >= 0.5, T, F))\n\n\ngwr.fixed$y <- as.factor(gwr.fixed$y)\ngwr.fixed$most <- as.factor(gwr.fixed$most)\nCM <- confusionMatrix(data = gwr.fixed$most, reference = gwr.fixed$y)\nCM\n\nConfusion Matrix and Statistics\n\n          Reference\nPrediction FALSE TRUE\n     FALSE  1824  263\n     TRUE    290 2379\n                                          \n               Accuracy : 0.8837          \n                 95% CI : (0.8743, 0.8927)\n    No Information Rate : 0.5555          \n    P-Value [Acc > NIR] : <2e-16          \n                                          \n                  Kappa : 0.7642          \n                                          \n Mcnemar's Test P-Value : 0.2689          \n                                          \n            Sensitivity : 0.8628          \n            Specificity : 0.9005          \n         Pos Pred Value : 0.8740          \n         Neg Pred Value : 0.8913          \n             Prevalence : 0.4445          \n         Detection Rate : 0.3835          \n   Detection Prevalence : 0.4388          \n      Balanced Accuracy : 0.8816          \n                                          \n       'Positive' Class : FALSE"
  },
  {
    "objectID": "In-class_Ex5/In-class_Ex5.html#visualising-gwlr",
    "href": "In-class_Ex5/In-class_Ex5.html#visualising-gwlr",
    "title": "In-class_Ex5: Modeling the Spatial Variation: the Explanatory Factors of Water Point Status using Geographical Weighted Logistic Regression",
    "section": "Visualising gwLR",
    "text": "Visualising gwLR\n\nOsun_wp_sf_selected <- Osun_wp_sf_clean %>%\n  select(c(ADM2_EN, ADM2_PCODE,\n           ADM1_EN, ADM1_PCODE,\n           status))\n\n\ngwr_sf.fixed <- cbind(Osun_wp_sf_selected, gwr.fixed)\n\nThe code chunks below is used to create an interactive point symbol map.\n\ntmap_mode(\"view\")\n\ntmap mode set to interactive viewing\n\nprob_T <- tm_shape(Osun) +\n  tm_polygons(alpha = 0.1) +\n  tm_shape(gwr_sf.fixed) +\n  tm_dots(col = \"yhat\",\n          border.col = \"gray60\",\n          border.lwd = 1) +\n  tm_view(set.zoom.limits = c(8,14))\nprob_T"
  },
  {
    "objectID": "Take-home_Ex1/Take-home_Ex1.html",
    "href": "Take-home_Ex1/Take-home_Ex1.html",
    "title": "Take-home Exercise 1",
    "section": "",
    "text": "Water is an important resource to human beings. Providing clean and accessible water is crucial for human health. However, over 40% of population worldwide do not have access to clean water. The lack of clean water not only poses a threat to human health, but also threatens food security as 70% of world’s clean water is used in agriculture. This problem is especially severe in Africa continent due to the difficulty in providing clean water to the rural community.\nTo solve the above issue, a global Water Point Data Exchange (WPdx) project has been initiated which aims at collecting water point related data from rural areas and share it via WPdx Data Repository."
  },
  {
    "objectID": "Take-home_Ex1/Take-home_Ex1.html#objectives",
    "href": "Take-home_Ex1/Take-home_Ex1.html#objectives",
    "title": "Take-home Exercise 1",
    "section": "Objectives",
    "text": "Objectives\nGeospatial analytics plays an important role in addressing social issues. In this study, appropriate global and local measures of spatial association techniques are used to identify the spatial patterns of Not Functional water points. Nigeria is used as the study country"
  },
  {
    "objectID": "Take-home_Ex1/Take-home_Ex1.html#introduction",
    "href": "Take-home_Ex1/Take-home_Ex1.html#introduction",
    "title": "Take-home Exercise 1",
    "section": "Introduction",
    "text": "Introduction"
  },
  {
    "objectID": "Take-home_Ex1/Take-home_Ex1.html#libraries",
    "href": "Take-home_Ex1/Take-home_Ex1.html#libraries",
    "title": "Take-home Exercise 1",
    "section": "Libraries",
    "text": "Libraries\n\nsf is use for importing and handling geospatial data in R,\ntidyverse is mainly use for wrangling attribute data in R,\nspdep will be used to compute spatial weights, global and local spatial autocorrelation statistics, and\ntmap will be used to prepare cartographic quality chropleth map."
  },
  {
    "objectID": "Take-home_Ex1/Take-home_Ex1.html#getting-started",
    "href": "Take-home_Ex1/Take-home_Ex1.html#getting-started",
    "title": "Take-home Exercise 1",
    "section": "Getting Started",
    "text": "Getting Started\n\npacman::p_load(sf, tidyverse, tmap, spdep)"
  },
  {
    "objectID": "Take-home_Ex1/Take-home_Ex1.html#importing-geospatial-data",
    "href": "Take-home_Ex1/Take-home_Ex1.html#importing-geospatial-data",
    "title": "Take-home Exercise 1",
    "section": "Importing Geospatial Data",
    "text": "Importing Geospatial Data\nread_rds is used to access the data.\n\nnga_wp <- read_rds(\"data/nga_wp.rds\")\n\n\nnigeria <- nga_wp\n\n\nwp_functional <- qtm(nga_wp, \"wpt functional\")\nwp_nonfunctional <- qtm(nga_wp, \"wpt non-functional\")"
  },
  {
    "objectID": "Take-home_Ex1/Take-home_Ex1.html#importing-water-point-geospatial-data",
    "href": "Take-home_Ex1/Take-home_Ex1.html#importing-water-point-geospatial-data",
    "title": "Take-home Exercise 1",
    "section": "Importing water point geospatial data",
    "text": "Importing water point geospatial data\nFirst, we are going to import the water point geospatial data (i.e. geo_export) by using the code chunk below.\n\nwp <- st_read(dsn = \"data\", \n                 layer = \"geo_export\",\n                  crs = 4326) %>%\n  filter(clean_coun == \"Nigeria\")\n\nNext, write_rds() of readr package is used to save the extracted sf data table (i.e. wp) into an output file in rds data format. The output file is called wp_nga.rds and it is saved in geodata sub-folder.\n\nwrite_rds(wp, \"data/wp_nga.rds\")"
  },
  {
    "objectID": "Take-home_Ex1/Take-home_Ex1.html#importing-nigeria-lga-boundary-data",
    "href": "Take-home_Ex1/Take-home_Ex1.html#importing-nigeria-lga-boundary-data",
    "title": "Take-home Exercise 1",
    "section": "Importing Nigeria LGA boundary data",
    "text": "Importing Nigeria LGA boundary data\nNow, we are going to import the LGA boundary data into R environment by using the code chunk below.\n\nnga <- st_read(dsn = \"data\",layer = \"nga_admbnda_adm2_osgof_20190417\",crs = 4326)"
  },
  {
    "objectID": "Take-home_Ex1/Take-home_Ex1.html#data-wrangling",
    "href": "Take-home_Ex1/Take-home_Ex1.html#data-wrangling",
    "title": "Take-home Exercise 1",
    "section": "Data Wrangling",
    "text": "Data Wrangling"
  },
  {
    "objectID": "Take-home_Ex1/Take-home_Ex1.html#recoding-na-values-into-string",
    "href": "Take-home_Ex1/Take-home_Ex1.html#recoding-na-values-into-string",
    "title": "Take-home Exercise 1",
    "section": "Recoding NA values into string",
    "text": "Recoding NA values into string\nIn the code chunk below, replace_na() is used to recode all the NA values in status_cle field into Unknown.\n\nwp_nga <- write_rds(wp, \"data/wp_nga.rds\")\n\n\nwp_nga <- read_rds(\"data/wp_nga.rds\") %>%\n  mutate(status_cle = \nreplace_na(status_cle, \"Unknown\"))"
  },
  {
    "objectID": "Take-home_Ex1/Take-home_Ex1.html#eda",
    "href": "Take-home_Ex1/Take-home_Ex1.html#eda",
    "title": "Take-home Exercise 1",
    "section": "EDA",
    "text": "EDA\nIn the code chunk below. ‘filter()’ of dplyr is used to select functional points.\n\nfreq(data=wp_nga,\n     input = 'status_cle')"
  },
  {
    "objectID": "Take-home_Ex1/Take-home_Ex1.html#extracting-water-point-data",
    "href": "Take-home_Ex1/Take-home_Ex1.html#extracting-water-point-data",
    "title": "Take-home Exercise 1",
    "section": "Extracting Water Point Data",
    "text": "Extracting Water Point Data\nIn this section, we will extract the water point records by using classes in status_cle field."
  },
  {
    "objectID": "Take-home_Ex1/Take-home_Ex1.html#extracting-funtional-water-point",
    "href": "Take-home_Ex1/Take-home_Ex1.html#extracting-funtional-water-point",
    "title": "Take-home Exercise 1",
    "section": "Extracting funtional water point",
    "text": "Extracting funtional water point\nIn the code chunk below, filter() of dplyr is used to select functional water points.\n\nwpt_functional <- wp_nga %>%\n  filter(status_cle %in%\n           c(\"Functional\",\n             \"Functional but not in use\",\n             \"Functional but needs repair\"))\n\n\nfreq(data=wpt_functional,\n     input = 'status_cle')"
  },
  {
    "objectID": "Take-home_Ex1/Take-home_Ex1.html#extracting-non-funtional-water-point",
    "href": "Take-home_Ex1/Take-home_Ex1.html#extracting-non-funtional-water-point",
    "title": "Take-home Exercise 1",
    "section": "Extracting non-funtional water point",
    "text": "Extracting non-funtional water point\nIn the code chunk below, filter() of dplyr is used to select non-functional water points.\n\nwpt_nonfunctional <- wp_nga %>%\n  filter(status_cle %in%\n           c(\"Abandoned/Decommissioned\",\n             \"Abandoned\",\n             \"Non-Functional\",\n             \"Non functional due to dry season\",\n             \"Non functional due to dry season\"))\n\n\nfreq(data=wpt_nonfunctional,\n     input = 'status_cle')"
  },
  {
    "objectID": "Take-home_Ex1/Take-home_Ex1.html#extracting-water-point-with-unknown-class",
    "href": "Take-home_Ex1/Take-home_Ex1.html#extracting-water-point-with-unknown-class",
    "title": "Take-home Exercise 1",
    "section": "Extracting water point with Unknown class",
    "text": "Extracting water point with Unknown class\nIn the code chunk below, filter() of dplyr is used to select water points with unknown status.\n\nwpt_unknown <- wp_nga %>%\n  filter(status_cle == \"Unknown\")"
  },
  {
    "objectID": "Take-home_Ex1/Take-home_Ex1.html#performing-point-in-polygon-count",
    "href": "Take-home_Ex1/Take-home_Ex1.html#performing-point-in-polygon-count",
    "title": "Take-home Exercise 1",
    "section": "Performing Point-in-Polygon Count",
    "text": "Performing Point-in-Polygon Count\n\nnga_wp <- nga %>% \n  mutate(`total wpt` = lengths(\n    st_intersects(nga, wp_nga))) %>%\n  mutate(`wpt functional` = lengths(\n    st_intersects(nga, wpt_functional))) %>%\n  mutate(`wpt non-functional` = lengths(\n    st_intersects(nga, wpt_nonfunctional))) %>%\n  mutate(`wpt unknown` = lengths(\n    st_intersects(nga, wpt_unknown)))"
  },
  {
    "objectID": "Take-home_Ex1/Take-home_Ex1.html#saving-the-analytical-data-table",
    "href": "Take-home_Ex1/Take-home_Ex1.html#saving-the-analytical-data-table",
    "title": "Take-home Exercise 1",
    "section": "Saving the Analytical Data Table",
    "text": "Saving the Analytical Data Table\n\nnga_wp <- nga_wp %>%\n  mutate(pct_functional = `wpt functional`/`total wpt`) %>%\n  mutate(`pct_non-functional` = `wpt non-functional`/`total wpt`) %>%\n  select(3:4, 9:10, 18:23)\n\nThings to learn from the code chunk above:\n\nmutate() of dplyr package is used to derive two fields namely pct_functional and pct_non-functional.\nto keep the file size small, select() of dplyr is used to retain only field 3,4,9,10, 18,19,20,21,22,and 23.\n\nNow, you have the tidy sf data table subsequent analysis. We will save the sf data table into rds format.\n\nwrite_rds(nga_wp, \"data/nga_wp.rds\")"
  },
  {
    "objectID": "Take-home_Ex1/Take-home_Ex1.html#visualising-the-spatial-distribution-of-water-point",
    "href": "Take-home_Ex1/Take-home_Ex1.html#visualising-the-spatial-distribution-of-water-point",
    "title": "Take-home Exercise 1",
    "section": "Visualising the spatial distribution of water point",
    "text": "Visualising the spatial distribution of water point\n\nnga_wp <- read_rds(\"data/nga_wp.rds\")\ntotal <- qtm(nga_wp, \"total wpt\")\nwp_functional <- qtm(nga_wp, \"wpt functional\")\nwp_nonfunctional <- qtm(nga_wp, \"wpt non-functional\")\nunknown <- qtm(nga_wp, \"wpt unknown\")\n\ntmap_arrange(total, wp_functional, wp_nonfunctional, unknown, asp=1, ncol=2)"
  },
  {
    "objectID": "Take-home_Ex1/Take-home_Ex1.html#assigning-epsg-code-to-a-simple-feature-data-frame",
    "href": "Take-home_Ex1/Take-home_Ex1.html#assigning-epsg-code-to-a-simple-feature-data-frame",
    "title": "Take-home Exercise 1",
    "section": "Assigning EPSG code to a simple feature data frame",
    "text": "Assigning EPSG code to a simple feature data frame\n\nst_crs(nga_wp)\n\nCoordinate Reference System:\n  User input: EPSG:4326 \n  wkt:\nGEOGCRS[\"WGS 84\",\n    DATUM[\"World Geodetic System 1984\",\n        ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n            LENGTHUNIT[\"metre\",1]]],\n    PRIMEM[\"Greenwich\",0,\n        ANGLEUNIT[\"degree\",0.0174532925199433]],\n    CS[ellipsoidal,2],\n        AXIS[\"geodetic latitude (Lat)\",north,\n            ORDER[1],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        AXIS[\"geodetic longitude (Lon)\",east,\n            ORDER[2],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n    USAGE[\n        SCOPE[\"Horizontal component of 3D system.\"],\n        AREA[\"World.\"],\n        BBOX[-90,-180,90,180]],\n    ID[\"EPSG\",4326]]\n\n\nProjected Coordinate System should be changed to one of following EPSG: 26391, 26392, and 26303. The code chunk below is used to change EPSG to 26391.\n\nnga_wp26391 <- st_set_crs(nga_wp, 26391)\n\n\nnga_wp<- st_transform(nga_wp, 26391)\nst_crs(nga_wp)\n\nCoordinate Reference System:\n  User input: EPSG:26391 \n  wkt:\nPROJCRS[\"Minna / Nigeria West Belt\",\n    BASEGEOGCRS[\"Minna\",\n        DATUM[\"Minna\",\n            ELLIPSOID[\"Clarke 1880 (RGS)\",6378249.145,293.465,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4263]],\n    CONVERSION[\"Nigeria West Belt\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",4,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",4.5,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",0.99975,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",230738.26,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",0,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Engineering survey, topographic mapping.\"],\n        AREA[\"Nigeria - onshore west of 6°30'E, onshore and offshore shelf.\"],\n        BBOX[3.57,2.69,13.9,6.5]],\n    ID[\"EPSG\",26391]]\n\nst_crs(nga_wp26391)\n\nCoordinate Reference System:\n  User input: EPSG:26391 \n  wkt:\nPROJCRS[\"Minna / Nigeria West Belt\",\n    BASEGEOGCRS[\"Minna\",\n        DATUM[\"Minna\",\n            ELLIPSOID[\"Clarke 1880 (RGS)\",6378249.145,293.465,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4263]],\n    CONVERSION[\"Nigeria West Belt\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",4,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",4.5,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",0.99975,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",230738.26,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",0,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Engineering survey, topographic mapping.\"],\n        AREA[\"Nigeria - onshore west of 6°30'E, onshore and offshore shelf.\"],\n        BBOX[3.57,2.69,13.9,6.5]],\n    ID[\"EPSG\",26391]]"
  },
  {
    "objectID": "Take-home_Ex1/Take-home_Ex1.html#functional-and-non-functional-water-point",
    "href": "Take-home_Ex1/Take-home_Ex1.html#functional-and-non-functional-water-point",
    "title": "Take-home Exercise 1",
    "section": "Functional and non-functional water point",
    "text": "Functional and non-functional water point"
  },
  {
    "objectID": "Take-home_Ex1/Take-home_Ex1.html#thematic-mapping",
    "href": "Take-home_Ex1/Take-home_Ex1.html#thematic-mapping",
    "title": "Take-home Exercise 1",
    "section": "Thematic Mapping",
    "text": "Thematic Mapping\nBy using appropriate thematic mapping technique provided by tmap package, spatial distribution of functional and non-functional water point rate are demonstrated at LGA level.\n\nequal <- tm_shape(nga_wp) +\n  tm_fill(\"wpt non-functional\",\n          n = 6,\n          style = \"equal\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Equal interval\")\n\nquantile <- tm_shape(nga_wp) +\n  tm_fill(\"wpt non-functional\",\n          n = 6,\n          style = \"quantile\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Equal quantile\")\n\ntmap_arrange(equal, \n             quantile, \n             asp=1, \n             ncol=2)"
  },
  {
    "objectID": "Take-home_Ex1/Take-home_Ex1.html#computing-contiguity-spatial-weights",
    "href": "Take-home_Ex1/Take-home_Ex1.html#computing-contiguity-spatial-weights",
    "title": "Take-home Exercise 1",
    "section": "Computing Contiguity Spatial Weights",
    "text": "Computing Contiguity Spatial Weights\nIs the distribution of functional water points across Nigeria equal?\nBefore we compute the global spatial autocorrelation statistics, we need to construct a spatial weights. The spatial weights is used to define the neighbourhood relationships between the local government areas in Nigeria.\nFirst of all, we need to select an appropriate spatial weighing method to calculate the spatial weight matrix.\n\nPolygon Contiguity Method\nThe polygon contiguity method is effective when polygons are similar in size and distribution, and when spatial relationships are a function of polygon proximity (the idea that if two polygons share a boundary, spatial interaction between them increases).\nThe code chunk below is used to show the boundary line of LGA in Nigeria.\n\nnigeria_lga <- tm_shape(nga_wp) +\n  tm_polygons()\nnigeria_lga\n\n\n\n\nThe size and distribution of LGA in Nigeria is not similar. Some LGA are more dense and have shorter boundary.\n\n\nDistance-based neighbours\nTo use distance-based method, the first step is to get the centroid of each polygon by running st_centroid on the sf package.\n\ncoords <- st_centroid(st_geometry(nga_wp))\n\n\nk1 <- knn2nb(knearneigh(coords))\nk1dists <- unlist(nbdists(k1, coords, longlat = TRUE))\nsummary(k1dists)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   2669   12834   20304   22084   27783   72139 \n\n\nThe summary report shows that the largest first-nearest neighbour distance is 72139 km, which will be used as the upper threshold in order to make sure all LGA will have at least one neighbour.\n\n\nComputing fixed distance weight matrix\nThe fixed distance method often is a good option for polygon data when there is a large variation in polygon size.\n\nupper_therhold <- 72200\nwm_d <- dnearneigh(coords, 0, upper_therhold, longlat = TRUE)\nwm_d\n\nNeighbour list object:\nNumber of regions: 774 \nNumber of nonzero links: 18158 \nPercentage nonzero weights: 3.031001 \nAverage number of links: 23.45995 \n\n\nThe report shows that the average number of links for each region is 23.46, which may be skewed for the analysis.\n\n\nComputing adaptive distance weight matrix\nAdaptive distance can adjust itself according to the density of data. K-nearest neighbours can be used to control the numbers of neighbours directly. The numbers of neighbours can be assigned to knearhneigh() and the neighbours can be designated based on the distance between centroids.\nThe code chunk below is used to control the numbers of neighbours at 8.\n\nknn8 <- knn2nb(knearneigh(coords, k=8))\nknn8\n\nNeighbour list object:\nNumber of regions: 774 \nNumber of nonzero links: 6192 \nPercentage nonzero weights: 1.033592 \nAverage number of links: 8 \nNon-symmetric neighbours list\n\n\nThe code chunk below is used to plot the adaptive distance based neighbours.\n\nplot(nga_wp$geometry, border=\"lightgrey\")\nplot(knn8, coords, pch = 19, cex = 0.6, add = TRUE, col = \"red\")\n\n\n\n\nK-nearest neighbours method is chosen as the spatial weighting method.\n\n\nRow-standardised weight matrix\nNext, we need to assign weights to each neighbouring polygon. In our case, each neighbouring will be assigned equal weight.\n\nrsknn8 <- nb2listw(knn8, \n                   style=\"W\", \n                   zero.policy = TRUE)\nrsknn8\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 774 \nNumber of nonzero links: 6192 \nPercentage nonzero weights: 1.033592 \nAverage number of links: 8 \nNon-symmetric neighbours list\n\nWeights style: W \nWeights constants summary:\n    n     nn  S0       S1       S2\nW 774 599076 774 174.2812 3155.312"
  },
  {
    "objectID": "Take-home_Ex1/Take-home_Ex1.html#global-spatial-autocorrelation",
    "href": "Take-home_Ex1/Take-home_Ex1.html#global-spatial-autocorrelation",
    "title": "Take-home Exercise 1",
    "section": "Global Spatial Autocorrelation",
    "text": "Global Spatial Autocorrelation\n\nGlobal Spatial Autocorrelation: Moran’s I\n\nMoran’s I Test\nThe code chunk below performs Moran’s I statistical testing using moran.test() of spdep.\n\nmoran.test(nga_wp$`pct_non-functional`, \n           listw=rsknn8, \n           zero.policy = TRUE, \n           na.action=na.omit)\n\n\n    Moran I test under randomisation\n\ndata:  nga_wp$`pct_non-functional`  \nweights: rsknn8 \nomitted: 3, 86, 241, 250, 252, 261, 400, 406, 447, 473, 492, 507, 526   \n\nMoran I statistic standard deviate = 26.049, p-value < 2.2e-16\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n     0.4467499630     -0.0013157895      0.0002958736 \n\n\n\n\nComputing Monte Carlo Moran’s I\nThe code chunk below performs permutation test for Moran’s I statistic by using moran.mc() of spdep. A total of 1000 simulation will be performed.\n\nset.seed(1234)\nbperm= moran.mc(nga_wp$`pct_non-functional`, \n                listw=rsknn8, \n                nsim=999, \n                zero.policy = TRUE, \n                na.action=na.omit)\nbperm\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  nga_wp$`pct_non-functional` \nweights: rsknn8 \nomitted: 3, 86, 241, 250, 252, 261, 400, 406, 447, 473, 492, 507, 526 \nnumber of simulations + 1: 1000 \n\nstatistic = 0.44675, observed rank = 1000, p-value = 0.001\nalternative hypothesis: greater\n\n\n\n\nVisualising Monte Carlo Moran’s I\nThe code chunk below is used to plot the distribution of Monte Carlo test result.\n\nmean(bperm$res[1:999])\n\n[1] -0.001462387\n\nvar(bperm$res[1:999])\n\n[1] 0.0002943097\n\nsummary(bperm$res[1:999])\n\n     Min.   1st Qu.    Median      Mean   3rd Qu.      Max. \n-0.058672 -0.013135 -0.002166 -0.001462  0.010635  0.054348 \n\n\n\nhist(bperm$res, \n     freq=TRUE, \n     breaks=20, \n     xlab=\"Simulated Moran's I\")\nabline(v=0, \n       col=\"red\") \n\n\n\n\n\n\nComputing Moran’s I correlogram\nIn the code chunk below, sp.correlogram() of spdep package is used to compute a 8-lag spatial correlogram of GDPPC. The global spatial autocorrelation used in Moran’s I. The plot() of base Graph is then used to plot the output.\n\nMI_corr <- sp.correlogram(knn8, \n                          nga_wp$`wpt non-functional`, \n                          order=8, \n                          method=\"I\", \n                          style=\"W\")\nplot(MI_corr)"
  },
  {
    "objectID": "Take-home_Ex1/Take-home_Ex1.html#cluster-and-outlier-analysis",
    "href": "Take-home_Ex1/Take-home_Ex1.html#cluster-and-outlier-analysis",
    "title": "Take-home Exercise 1",
    "section": "Cluster and Outlier Analysis",
    "text": "Cluster and Outlier Analysis\nLocal Indicators of Spatial Association or LISA are statistics that evaluate the existence of clusters in the spatial arrangement of a given variable."
  },
  {
    "objectID": "Take-home_Ex1/Take-home_Ex1.html#computing-local-morans-i",
    "href": "Take-home_Ex1/Take-home_Ex1.html#computing-local-morans-i",
    "title": "Take-home Exercise 1",
    "section": "Computing local Moran’s I",
    "text": "Computing local Moran’s I\nTo compute local Moran’s I, the localmoran() function of spdep will be used. It computes Ii values, given a set of zi values and a listw object providing neighbour weighting information for the polygon associated with the zi values.\n\nfips <- order(nga_wp$`wpt non-functional`)\nlocalMI <- localmoran(nga_wp$`wpt non-functional`, rsknn8)\nhead(localMI)\n\n           Ii          E.Ii       Var.Ii       Z.Ii Pr(z != E(Ii))\n1 -0.12255190 -9.573039e-04 0.0916914829 -0.4015594    0.688008333\n2 -0.01859105 -1.341408e-05 0.0012860273 -0.5180426    0.604428569\n3  1.26057597 -1.630758e-03 0.1560902703  3.1947919    0.001399317\n4 -0.02773766 -2.219984e-05 0.0021283116 -0.6007649    0.547996609\n5  0.06302928 -2.003354e-04 0.0192028498  0.4562866    0.648183927\n6  0.04698520 -6.929289e-06 0.0006643253  1.8232018    0.068272838"
  },
  {
    "objectID": "Take-home_Ex1/Take-home_Ex1.html#mapping-the-local-morans",
    "href": "Take-home_Ex1/Take-home_Ex1.html#mapping-the-local-morans",
    "title": "Take-home Exercise 1",
    "section": "Mapping the local Moran’s",
    "text": "Mapping the local Moran’s\nUsing choropleth mapping functions of tmap package, we can plot the local Moran’s I values by using the code chinks below.\n\nnga_wp.localMI <- cbind(nga_wp,localMI) %>%\n  rename(Pr.Ii = Pr.z....E.Ii..)\n\n\ntm_shape(nga_wp.localMI) +\n  tm_fill(col = \"Ii\", \n          style = \"pretty\",\n          palette = \"RdBu\",\n          title = \"local moran statistics\") +\n  tm_borders(alpha = 0.5)"
  },
  {
    "objectID": "Take-home_Ex1/Take-home_Ex1.html#mapping-both-local-morans-i-values-and-p-values",
    "href": "Take-home_Ex1/Take-home_Ex1.html#mapping-both-local-morans-i-values-and-p-values",
    "title": "Take-home Exercise 1",
    "section": "Mapping both local Moran’s I values and p-values",
    "text": "Mapping both local Moran’s I values and p-values\nFor effective interpretation, it is better to plot both the local Moran’s I values map and its corresponding p-values map next to each other.\nThe code chunk below will be used to create such visualisation.\n\nlocalMI.map <- tm_shape(nga_wp.localMI) +\n  tm_fill(col = \"Ii\", \n          style = \"pretty\", \n          title = \"local moran statistics\") +\n  tm_borders(alpha = 0.5)\n\npvalue.map <- tm_shape(nga_wp.localMI) +\n  tm_fill(col = \"Pr.Ii\", \n          breaks=c(-Inf, 0.001, 0.01, 0.05, 0.1, Inf),\n          palette=\"-Blues\", \n          title = \"local Moran's I p-values\") +\n  tm_borders(alpha = 0.5)\n\ntmap_arrange(localMI.map, pvalue.map, asp=1, ncol=2)"
  },
  {
    "objectID": "Take-home_Ex1/Take-home_Ex1.html#creating-a-lisa-cluster-map",
    "href": "Take-home_Ex1/Take-home_Ex1.html#creating-a-lisa-cluster-map",
    "title": "Take-home Exercise 1",
    "section": "Creating a LISA Cluster Map",
    "text": "Creating a LISA Cluster Map\nThe LISA Cluster Map shows the significant locations color coded by type of spatial autocorrelation. The first step before we can generate the LISA cluster map is to plot the Moran scatterplot.\n\nPlotting Moran scatterplot\nThe Moran scatterplot is an illustration of the relationship between the values of the chosen attribute at each location and the average value of the same attribute at neighboring locations.\n\nnci <- moran.plot(nga_wp$`wpt non-functional`, rsknn8,\n                  labels=as.character(nga_wp$ADM2_EN), \n                  xlab=\"Non-Functional waterpoints\", \n                  ylab=\"Spatially Lag Non-functional waterpoints\")\n\n\n\n\n\n\nPlotting Moran scatterplot with standardised variable\n\nnga_wp$Z.nonfunc <- scale(nga_wp$`wpt non-functional`) %>% \n  as.vector \nnci2 <- moran.plot(nga_wp$Z.nonfunc, rsknn8,\n                   labels=as.character(nga_wp$ADM2_EN),\n                   xlab=\"z-no functional points\", \n                   ylab=\"Spatially Lag non functional points\")"
  },
  {
    "objectID": "Take-home_Ex1/Take-home_Ex1.html#preparing-lisa-map-classes",
    "href": "Take-home_Ex1/Take-home_Ex1.html#preparing-lisa-map-classes",
    "title": "Take-home Exercise 1",
    "section": "Preparing LISA map classes",
    "text": "Preparing LISA map classes\nThe code chunks below show the steps to prepare a LISA cluster map.\n\nquadrant <- vector(mode=\"numeric\",length=nrow(localMI))\n\nNext, derives the spatially lagged variable of interest and centers the spatially lagged variable around its mean.\n\nnga_wp$lag_non_func_points <- lag.listw(rsknn8, nga_wp$`wpt non-functional`)\nDV <- nga_wp$lag_non_func_points - mean(nga_wp$lag_non_func_points)\n\n\nLM_I <- localMI[,1] - mean(localMI[,1])    \n\n\nsignif <- 0.05       \n\n\nquadrant[DV <0 & LM_I>0] <- 1\nquadrant[DV >0 & LM_I<0] <- 2\nquadrant[DV <0 & LM_I<0] <- 3  \nquadrant[DV >0 & LM_I>0] <- 4      \n\n\nquadrant[localMI[,5]>signif] <- 0"
  },
  {
    "objectID": "Take-home_Ex1/Take-home_Ex1.html#plotting-lisa-map",
    "href": "Take-home_Ex1/Take-home_Ex1.html#plotting-lisa-map",
    "title": "Take-home Exercise 1",
    "section": "Plotting LISA map",
    "text": "Plotting LISA map\nNow, we can build the LISA map by using the code chunks below.\n\nnga_wp.localMI$quadrant <- quadrant\ncolors <- c(\"#ffffff\", \"#2c7bb6\", \"#abd9e9\", \"#fdae61\", \"#d7191c\")\nclusters <- c(\"insignificant\", \"low-low\", \"low-high\", \"high-low\", \"high-high\")\n\ntm_shape(nga_wp.localMI) +\n  tm_fill(col = \"quadrant\", \n          style = \"cat\", \n          palette = colors[c(sort(unique(quadrant)))+1], \n          labels = clusters[c(sort(unique(quadrant)))+1],\n          popup.vars = c(\"\")) +\n  tm_view(set.zoom.limits = c(11,17)) +\n  tm_borders(alpha=0.5)\n\n\n\n\nFor effective interpretation, it is better to plot both the local Moran’s I values map and its corresponding p-values map next to each other.\nThe code chunk below will be used to create such visualisation.\n\ngdppc <- qtm(nga_wp,\"wpt non-functional\")\n\nnga_wp.localMI$quadrant <- quadrant\ncolors <- c(\"#ffffff\", \"#2c7bb6\", \"#abd9e9\", \"#fdae61\", \"#d7191c\")\nclusters <- c(\"insignificant\", \"low-low\", \"low-high\", \"high-low\", \"high-high\")\n\nLISAmap <- tm_shape(nga_wp.localMI) +\n  tm_fill(col = \"quadrant\", \n          style = \"cat\", \n          palette = colors[c(sort(unique(quadrant)))+1], \n          labels = clusters[c(sort(unique(quadrant)))+1],\n          popup.vars = c(\"\")) +\n  tm_view(set.zoom.limits = c(11,17)) +\n  tm_borders(alpha=0.5)\n\ntmap_arrange(wp_nonfunctional, LISAmap, \n             asp=1, ncol=2)"
  },
  {
    "objectID": "Take-home_Ex1/Take-home_Ex1.html#hot-spot-and-cold-spot-area-analysis",
    "href": "Take-home_Ex1/Take-home_Ex1.html#hot-spot-and-cold-spot-area-analysis",
    "title": "Take-home Exercise 1",
    "section": "Hot Spot and Cold Spot Area Analysis",
    "text": "Hot Spot and Cold Spot Area Analysis\nBeside detecting cluster and outliers, localised spatial statistics can be also used to detect hot spot and/or cold spot areas."
  },
  {
    "objectID": "Take-home_Ex1/Take-home_Ex1.html#getis-and-ords-g-statistics",
    "href": "Take-home_Ex1/Take-home_Ex1.html#getis-and-ords-g-statistics",
    "title": "Take-home Exercise 1",
    "section": "Getis and Ord’s G-Statistics",
    "text": "Getis and Ord’s G-Statistics\nThe analysis consists of three steps:\n\nDeriving spatial weight matrix\nComputing Gi statistics\nMapping Gi statistics"
  },
  {
    "objectID": "Take-home_Ex1/Take-home_Ex1.html#deriving-distance-based-weight-matrix",
    "href": "Take-home_Ex1/Take-home_Ex1.html#deriving-distance-based-weight-matrix",
    "title": "Take-home Exercise 1",
    "section": "Deriving distance-based weight matrix",
    "text": "Deriving distance-based weight matrix"
  },
  {
    "objectID": "Take-home_Ex1/Take-home_Ex1.html#deriving-the-centroid",
    "href": "Take-home_Ex1/Take-home_Ex1.html#deriving-the-centroid",
    "title": "Take-home Exercise 1",
    "section": "Deriving the centroid",
    "text": "Deriving the centroid\n\nlongitude <- map_dbl(nga_wp$geometry, ~st_centroid(.x)[[1]])\nlatitude <- map_dbl(nga_wp$geometry, ~st_centroid(.x)[[2]])\ncoords <- cbind(longitude, latitude)"
  },
  {
    "objectID": "Take-home_Ex1/Take-home_Ex1.html#determine-the-cut-off-distance",
    "href": "Take-home_Ex1/Take-home_Ex1.html#determine-the-cut-off-distance",
    "title": "Take-home Exercise 1",
    "section": "Determine the cut-off distance",
    "text": "Determine the cut-off distance\nFirstly, we need to determine the upper limit for distance band by using the steps below:\n\nReturn a matrix with the indices of points belonging to the set of the k nearest neighbours of each other by using knearneigh() of spdep.\nConvert the knn object returned by knearneigh() into a neighbours list of class nb with a list of integer vectors containing neighbour region number ids by using knn2nb().\nReturn the length of neighbour relationship edges by using nbdists() of spdep. The function returns in the units of the coordinates if the coordinates are projected, in km otherwise.\nRemove the list structure of the returned object by using unlist().\n\n\ncoords <- st_centroid(st_geometry(nga_wp))\n\n\n#coords <- coordinates(nga_wp)\nk1 <- knn2nb(knearneigh(coords))\nk1dists <- unlist(nbdists(k1, coords, longlat = TRUE))\nsummary(k1dists)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   2669   12834   20304   22084   27783   72139 \n\n\nThe summary report shows that the largest first nearest neighbour distance is 72.139 km, so using this as the upper threshold gives certainty that all units will have at least one neighbour."
  },
  {
    "objectID": "Take-home_Ex1/Take-home_Ex1.html#computing-fixed-distance-weight-matrix-1",
    "href": "Take-home_Ex1/Take-home_Ex1.html#computing-fixed-distance-weight-matrix-1",
    "title": "Take-home Exercise 1",
    "section": "Computing fixed distance weight matrix",
    "text": "Computing fixed distance weight matrix\nNow, we will compute the distance weight matrix by using dnearneigh() as shown in the code chunk below.\n\nwm_d72 <- dnearneigh(coords, 0, 720000, longlat = TRUE)\nwm_d72\n\nNeighbour list object:\nNumber of regions: 774 \nNumber of nonzero links: 463284 \nPercentage nonzero weights: 77.33309 \nAverage number of links: 598.5581 \n\n\n\nwm72_lw <- nb2listw(wm_d72, style = 'B')\nsummary(wm72_lw)\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 774 \nNumber of nonzero links: 463284 \nPercentage nonzero weights: 77.33309 \nAverage number of links: 598.5581 \nLink number distribution:\n\n210 229 239 246 247 255 264 271 279 280 285 288 292 296 298 300 305 308 315 317 \n  1   1   1   2   2   1   1   1   1   1   2   1   1   1   1   1   1   1   1   1 \n321 322 325 326 329 331 336 344 346 351 357 363 368 374 376 378 380 383 386 388 \n  1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   2   1   1   1   1 \n391 393 395 398 402 409 415 417 419 420 423 425 429 430 432 433 436 439 440 441 \n  1   1   1   2   1   2   2   1   1   1   2   1   1   1   2   3   2   1   2   1 \n442 447 448 451 452 454 456 460 465 466 467 470 471 472 474 475 476 477 478 479 \n  1   1   2   3   2   1   1   2   1   2   2   2   1   1   2   1   1   1   1   1 \n481 482 483 486 487 491 493 495 496 497 499 500 502 504 505 506 507 508 510 511 \n  1   1   1   2   1   2   2   1   2   1   1   3   3   1   1   2   2   2   1   2 \n512 514 515 516 517 518 519 520 521 522 523 524 525 526 527 528 529 530 531 532 \n  3   5   1   2   4   2   1   7   1   3   5   5   3   3   1   9   3   7   2   1 \n533 534 535 537 538 539 540 541 542 543 544 545 546 547 548 549 550 551 552 553 \n  3   5   2   4   2   2   3   2   5   2   3   3   5   5   1   4   3   3   1   6 \n554 555 556 557 558 559 560 562 563 565 566 567 568 569 570 571 572 573 574 575 \n  1   3   2   4   3   1   2   1   2   4   2   3   1   5   3   1   3   1   3   1 \n576 578 579 580 581 582 583 584 585 586 587 588 589 591 592 593 594 595 597 598 \n  3   2   3   4   3   1   2   2   1   4   1   3   2   2   3   1   1   1   5   1 \n600 601 602 603 604 605 606 608 609 610 611 612 613 614 615 616 617 618 620 621 \n  1   1   5   3   1   2   1   3   3   4   5   6   5   1   1   4   2   1   3   2 \n622 623 624 626 627 628 629 630 632 633 634 635 636 637 638 639 640 641 643 644 \n  2   4   1   5   3   3   1   2   6   5   3   3   2   4   4   1   3   3   4   3 \n646 647 648 649 650 651 652 653 655 656 657 658 659 660 661 662 663 664 666 668 \n  2   1   2   1   2   5   4   7   4   2   4   2   2   2   1   5   3   6   2   2 \n669 670 671 672 673 674 675 676 677 678 679 680 681 682 683 684 685 686 687 688 \n  2   6   2   2   3   3   5   5   2   2   2   1   2   1   1   6   2   2   4   2 \n689 690 691 692 693 694 695 696 697 698 699 700 701 702 703 704 706 708 709 710 \n  7   2   2   1   1   1   2   2   1   2   3   4   2   1   1   1   4   2   5   2 \n711 713 714 715 716 717 718 719 720 721 722 723 724 725 726 727 728 729 730 731 \n  2   1   1   3   3   2   3   2   1   1   4   3   1   3   6   1   3   2   1   2 \n732 733 734 735 737 738 739 740 741 742 743 744 745 746 747 748 749 750 751 752 \n  1   2   4   1   4   1   3   3   1   2   5   1   2   3   2   2   1   2   2   5 \n753 754 755 756 758 759 760 761 762 763 764 765 766 767 768 769 770 771 772 773 \n  1   2   2   2   1   1   4   4   2   1   5   3   2   3   3   3   2   4   3   1 \n1 least connected region:\n406 with 210 links\n1 most connected region:\n423 with 773 links\n\nWeights style: B \nWeights constants summary:\n    n     nn     S0     S1         S2\nB 774 599076 463284 926568 1150174576"
  },
  {
    "objectID": "Take-home_Ex1/Take-home_Ex1.html#computing-adaptive-distance-weight-matrix-1",
    "href": "Take-home_Ex1/Take-home_Ex1.html#computing-adaptive-distance-weight-matrix-1",
    "title": "Take-home Exercise 1",
    "section": "Computing adaptive distance weight matrix",
    "text": "Computing adaptive distance weight matrix\n\nknn <- knn2nb(knearneigh(coords, k=8))\nknn\n\nNeighbour list object:\nNumber of regions: 774 \nNumber of nonzero links: 6192 \nPercentage nonzero weights: 1.033592 \nAverage number of links: 8 \nNon-symmetric neighbours list\n\n\n\nknn_lw <- nb2listw(knn, style = 'B')\nsummary(knn_lw)\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 774 \nNumber of nonzero links: 6192 \nPercentage nonzero weights: 1.033592 \nAverage number of links: 8 \nNon-symmetric neighbours list\nLink number distribution:\n\n  8 \n774 \n774 least connected regions:\nwith 8 links\n774 most connected regions:\nwith 8 links\n\nWeights style: B \nWeights constants summary:\n    n     nn   S0    S1     S2\nB 774 599076 6192 11154 201940"
  },
  {
    "objectID": "Take-home_Ex1/Take-home_Ex1.html#computing-gi-statistics",
    "href": "Take-home_Ex1/Take-home_Ex1.html#computing-gi-statistics",
    "title": "Take-home Exercise 1",
    "section": "Computing Gi statistics",
    "text": "Computing Gi statistics"
  },
  {
    "objectID": "Take-home_Ex1/Take-home_Ex1.html#gi-statistics-using-fixed-distance",
    "href": "Take-home_Ex1/Take-home_Ex1.html#gi-statistics-using-fixed-distance",
    "title": "Take-home Exercise 1",
    "section": "Gi statistics using fixed distance",
    "text": "Gi statistics using fixed distance\n\nfips <- order(nga_wp$`wpt non-functional`)\ngi.fixed <- localG(nga_wp$`wpt non-functional`, wm72_lw)\ngi.fixed\n\n  [1]  2.981099160  3.034849257  0.133661596  5.034256577  3.020998650\n  [6]  2.499911967  1.696726269  2.064808138  1.755165578  3.464417323\n [11]  2.797975852  4.075286383  6.364824442  3.724699953  1.641796486\n [16]  5.493300145  2.115206199  1.716911971  1.910080610  5.923625129\n [21]  4.387999651  2.431905221  2.465091585  5.309844527  2.901070136\n [26]  3.119241244  2.891276061  2.216472989  2.169637574  5.665284680\n [31]  6.233400105  2.213667443  4.594237581  2.483983156  1.781691579\n [36]  0.121275685  6.654401157  6.628976166  6.726663908  6.429044958\n [41]  5.952167311  2.783000706  1.861485090  4.355925251  3.941173814\n [46]  2.248544820  4.312983178  6.158133651  2.347232823  1.163601076\n [51]  2.224031169  2.922141455  3.844136153  2.168455402  2.028556129\n [56]  1.841960614  3.405055028  3.168969971  6.243733410  4.801289896\n [61]  4.428172524  2.308163482 -1.279455889  6.861564745  6.640323797\n [66]  2.586840510  3.955788599  2.748647624  2.171119219  2.567697249\n [71]  2.796911194  2.554318555  1.254758736  7.524121783  3.174281171\n [76] -0.738325997  1.892574795  3.084701275  2.505405316  4.159951337\n [81]  4.933931718  0.833435744  1.410859712  3.311316538  4.882909467\n [86]  2.833624230  3.745829343  7.395449101 -0.603221047  0.882756691\n [91]  0.393923889 -1.450212650  2.345793620  5.925592764 -0.543647156\n [96]  6.232351669  6.619342884  2.902639641  4.690892890  0.288661202\n[101]  4.322735795  2.321983922  2.693147495  2.538073968  5.400835858\n[106]  6.342864260 -0.075319241  6.039961296  7.751243736  1.963877641\n[111]  4.115796412  4.495764098  6.542825862  6.012183167  2.042408627\n[116]  7.226672889  1.933617429  1.480052053 -1.012144169  3.788720138\n[121]  2.982214912  1.807519062  3.396350715  3.771739692  5.371428304\n[126]  1.572214608  3.374254525  5.984020017  5.477998669  4.384520116\n[131]  5.740138949  0.955497983  1.120553749  3.019222930  3.567482155\n[136]  2.693550573  2.965277717  5.141470415  5.871786940  2.125057130\n[141]  3.193849031  4.873666158  1.904617295  2.957760757  5.635653327\n[146]  1.922657534  5.214928985  5.001467825  3.025557236  7.602250253\n[151]  2.094630106  1.454307736  2.146740013  5.490234639  4.676333635\n[156]  5.275454643  2.302134329  5.848651596 -0.778274095  0.378789800\n[161]  3.267634766  3.746589325  1.459566598  0.847584449  2.811524874\n[166]  4.225959398  5.425880784  5.618258740  1.960776501  2.967678416\n[171]  7.089630709  2.453231902  2.401929224  7.641925099  3.884102063\n[176]  2.039037987  1.570197288  1.755946507  2.447970614  2.910847829\n[181]  2.361956264  2.522865791  2.708404418  2.402107990  6.474932753\n[186]  6.872416411  4.221965370  4.634462771  2.768254970  2.912053355\n[191]  3.080989510  5.774120731  4.106070133  3.542429230  2.811488556\n[196]  2.836376828  4.392496440  4.642091150  4.593059195  4.075992885\n[201]  3.045731555  2.247132948  3.033028309  3.100208732  2.686834866\n[206]  2.547004090  2.827308498  2.907258213  2.840407952  5.718280383\n[211]  5.864175214  5.872990267  1.257203909  2.072906155  2.929499246\n[216]  3.276437648  2.243452164  1.633339439  4.930966730  4.957356071\n[221]  3.472347518  1.712038680  0.598857748  0.482673183  1.441842732\n[226]  2.845943199  5.095514823  7.698409400  4.088786242  1.791450887\n[231]  4.193248808 -1.869998181  5.038384661  4.687160247  4.405733302\n[236] -1.732853197  1.412739924  4.509464840  6.160046481  1.881775857\n[241]  1.088583401  4.877909840  2.594495056  0.510868956  3.211826623\n[246]  2.614200354 -0.153138655  1.740458171  8.242199671  0.987425281\n[251]  7.427067444  2.073248603  1.685574968  2.369427660  4.042312082\n[256]  5.881662504  4.392175836  1.931199402  4.450039479 -0.278012233\n[261]  0.506922195  8.073310019  4.642649317  4.829642342  6.326079633\n[266]  3.518688229  4.576287163  2.840307915  3.455070765  5.559184692\n[271]  1.736443632  3.074134918  1.771262050  2.409645607  1.787304594\n[276]  1.864346932  1.866634863  1.915731852  1.972035190  5.454238964\n[281]  1.698777572  1.981972160  1.798770497  3.166956132  2.406913733\n[286]  2.941585365  0.885009144  2.807115258  5.630081479  2.033043409\n[291]  2.375531443  2.516929498  2.769867729  2.527633284  1.894103832\n[296]  5.424143619  2.370511398  2.426598947  2.196580382  2.246588436\n[301]  1.981532348  5.221433923  3.794308135  6.237955102  3.773666209\n[306]  2.280175232  2.584106750  5.993905471  5.141865443  5.404850277\n[311]  5.374254984  3.541350880  2.678196643  2.462366858  2.494161380\n[316]  2.180224221  2.267560667  2.470653375  5.457588626  7.111190865\n[321]  2.992447489  3.329795564  2.730063456  3.896224344  3.201880717\n[326]  2.434337555  2.510836719  5.089148731  6.942461285  1.071740206\n[331]  2.940911277  2.805775876  2.549543985  2.990557518  2.845429761\n[336]  3.033168827  1.393630333  3.120071491  5.036407521  3.045760733\n[341]  2.345961816  5.921911361  3.484015538  3.488178777  7.562017705\n[346]  5.403496592  4.061705027  4.097040554  1.327109432  5.764268368\n[351]  3.264600172  0.880313776  2.697066607  3.330625179  5.249112801\n[356]  3.417591222  5.407443901  2.206665781  7.990088130  5.296641660\n[361]  1.464208674  3.147946209  4.578141779  3.418552036  3.211679287\n[366]  2.641502160  5.864395304  2.519118259  2.058174280  2.903650991\n[371]  2.950589437  2.887219008  3.945702160  1.408043840  2.788348561\n[376]  2.225016624  1.313078951  2.230437879  2.784585361  2.247989224\n[381] -1.770780608  4.646982440  1.718940734 -1.405242557  3.379769645\n[386]  5.269483551  1.953146614  1.214390290  6.457660955  2.679557447\n[391]  0.459141593 -1.448189097  6.349298530  4.659518484  3.186601836\n[396]  2.755926708  2.984995174  3.694661497  4.082920177  1.906269265\n[401]  3.385548706  3.718858481  5.138456517  1.369823819 -1.009969860\n[406] -1.444079822  6.204927570  0.198333524  1.775510951  4.800677813\n[411]  2.005722795  5.674341787  4.814701827  1.264851568  4.172593573\n[416]  0.180896586  3.382152132  3.206762168  5.928999968  5.833161332\n[421]  0.319155909  3.573324499          Inf  6.747611449  1.587285381\n[426]  5.499528777  2.639613610  4.990239361  3.386967292  2.719383640\n[431]  4.535407887  2.760854885  2.176983088  4.289969319  3.908298937\n[436]  5.741546437  3.857279249  3.383604833  2.839321318  1.652217608\n[441]  2.404402822  7.206591498  2.663600116  2.705471907  2.866328964\n[446]  4.533149836 -0.649483105  4.640120189  5.829990502  4.375788490\n[451]  6.244866363  1.488168255  5.502340238  4.903954496 -0.013935784\n[456]  1.731028850  7.856509946  1.104573820  2.247930846  2.031823058\n[461]  2.488759893  2.520750950 -0.566444786  0.981354483  0.999631303\n[466]  5.625757530 -1.310356500  7.014691183 -0.474437993  0.597647875\n[471]  6.224445058  1.943312401  2.027693239  4.383754961  1.047116576\n[476]  6.928569977  1.417780641  4.595575084  1.305365370  3.446855643\n[481]  2.544228352  4.814266702  5.526810379  3.345506547  3.080430338\n[486]  4.312282503  0.501366780  5.829075155  7.106954795  6.642283117\n[491]  4.187558321  0.321881974  4.814801427  7.518143529  5.105284534\n[496]  5.542258774 -1.478219452  3.254817942  2.052938524  2.032505745\n[501]  4.284901060  2.275867312  5.415416349  2.022871842  2.932883617\n[506]  5.541980876  0.743083189  7.677968686  0.548908649  6.878743996\n[511]  4.318562750  2.170741733  2.386005117  5.001377428  2.498718154\n[516]  3.915151434  1.298026779  1.832611390  4.843672483  4.075523890\n[521]  2.514365856  2.884152965  2.834320732  1.823093085 -1.005537494\n[526]  0.904232147  5.456809313  3.259667410  1.587917089  4.547839436\n[531]  2.827418817  2.695401830  2.488701356  2.545821192  2.648773198\n[536]  2.505643063  2.597418992  2.880941116  3.007408480  2.670174234\n[541]  5.302551883 -0.651582466  2.583523226  2.259782243  1.905856117\n[546]  2.951339892  2.529177732  2.759681700  3.084147359  3.838428774\n[551]  3.131044282  2.809584456  1.369874796  1.900643905  2.094484172\n[556]  2.257876251  3.842599656  2.443117518  2.760717330  4.158228617\n[561]  5.826341659  3.367167286  4.712865525  2.849859344  2.570423759\n[566]  3.433290574  3.423509319  2.540422647  2.362614274  6.394042946\n[571]  2.587518332  2.968831122  2.759636533  2.732676977  3.148039693\n[576]  1.795871470  3.075449318  4.444905190  2.219435143  1.402514654\n[581]  2.964677254  6.257737635  6.593181376  6.865139912  2.416413675\n[586]  2.585887478  2.885601841  2.857740170  4.533633151  2.663408964\n[591]  2.469101494  5.122007934  3.776746465  3.529069295  2.067573848\n[596]  4.940914440  3.012899337  1.846103666  2.133414043  2.099352347\n[601]  1.790932903  2.763277214  2.795634994  2.472787039  2.141251480\n[606]  2.831967508  3.101181578  3.072250521  3.403655168  3.546544307\n[611]  2.540304492  3.638211378  2.991980693  2.591463172  2.968791342\n[616]  2.811278710  2.999851077  2.122026959  2.261631997  4.893563727\n[621]  3.297933565  3.033528507  2.417027607  2.986708681  3.449070691\n[626]  4.308179567  2.709322633  2.588770925  5.847980213  4.698286702\n[631]  3.036378108  3.014600851  3.048344951  4.894882009  5.905230373\n[636]  2.744669163  2.946354937  2.121708074  2.174286711  4.087796012\n[641]  4.785416381  2.578467568  2.887376312  7.132004294  2.868520816\n[646]  1.532297083 -0.502459212  7.846245693  5.572379239  4.479307401\n[651]  2.233284914  6.388151574  6.113445923  4.605237830  5.370982901\n[656] -1.015160784  4.067873441  5.617407337  2.628341680  8.029769036\n[661]  3.476729282  5.811598472  2.806663367  6.359750089  2.546623053\n[666]  1.053669911  5.412355597  1.121653091  2.950960836 -0.964670769\n[671]  2.507017776  6.484795354  4.501649150  0.817849100  4.854197570\n[676] -0.008841078  1.564870773  7.887663168  2.727563558  4.917117499\n[681] -0.390591820  2.629365509  7.572337571  0.443590474  7.775227150\n[686]  7.827530865  1.730610134  1.914689485  4.227039974  4.117590318\n[691]  4.692275826  4.658308019  2.553308414  3.512178530  4.083611955\n[696]  1.997810419  2.870415655  4.695867996  1.981993317  6.273847089\n[701]  5.665253056  7.872045260  4.781746739  1.736158412  1.483533290\n[706]  4.742752480  4.790941378  2.015298831  5.040356356 -2.575615479\n[711]  4.567034559  5.570545796  4.294542893  6.521775759  5.326138970\n[716]  3.789715210  3.018649946  2.831214990  2.917541424  3.045224971\n[721]  3.096209499  3.014610079  2.976786465 -0.346174090  3.049121321\n[726]  3.017615948  3.065475942  2.271189957  2.592178186  2.869085161\n[731]  5.135053352  2.602988143  2.965002239  2.699255956  2.014459796\n[736]  2.108842660  2.829963194  2.992579004  5.298521056  2.110090121\n[741]  7.363086645  1.122046882  4.516974877  4.265677568  3.082667887\n[746]  3.076248045  3.083077496  5.800289112  1.439946599  4.715579517\n[751]  0.811464493  7.990689659  6.160364775  6.703300294  7.125599973\n[756]  7.696721322  1.847592238  2.687749140 -0.258638085  5.195868108\n[761]  5.779780886  2.866429367 -0.423824895 -0.965764453 -1.330867114\n[766]  0.903194675  0.893390772  2.951352785  4.805470576  1.123461203\n[771]  1.946361334 -1.694498295  7.225408736  6.330963812\nattr(,\"cluster\")\n  [1] Low  Low  Low  Low  Low  High Low  Low  High Low  Low  High Low  Low  High\n [16] High Low  High Low  Low  High Low  Low  High Low  Low  Low  High High High\n [31] High Low  Low  High High High Low  High High High High High Low  Low  Low \n [46] Low  High High High Low  Low  Low  Low  Low  Low  Low  Low  Low  Low  Low \n [61] Low  Low  High Low  High Low  High Low  Low  High High Low  High Low  High\n [76] Low  Low  Low  Low  Low  High High High Low  High Low  Low  Low  High High\n [91] Low  High Low  High High High High Low  High Low  Low  High Low  High High\n[106] Low  High High High High Low  High Low  Low  Low  High Low  High High High\n[121] Low  Low  Low  High Low  Low  Low  Low  Low  Low  High Low  High Low  High\n[136] Low  High Low  High Low  Low  High Low  High High Low  Low  High High Low \n[151] Low  High Low  High High Low  Low  High Low  Low  High Low  High High Low \n[166] Low  Low  High Low  Low  High Low  Low  High Low  Low  Low  Low  High Low \n[181] Low  High Low  Low  High Low  High High Low  Low  Low  Low  Low  Low  Low \n[196] High Low  Low  Low  Low  High High High Low  Low  Low  Low  Low  Low  Low \n[211] Low  Low  High Low  Low  Low  High High Low  Low  High Low  Low  High Low \n[226] Low  Low  Low  Low  High Low  Low  High Low  Low  High High Low  High High\n[241] Low  High Low  Low  High Low  Low  Low  Low  Low  Low  Low  Low  High High\n[256] Low  Low  Low  Low  Low  Low  Low  High Low  High Low  Low  High Low  High\n[271] Low  High Low  Low  Low  High Low  Low  Low  Low  High Low  High High Low \n[286] Low  Low  Low  Low  High Low  Low  Low  Low  Low  Low  Low  High High High\n[301] High Low  High High High Low  High Low  Low  Low  Low  Low  Low  Low  Low \n[316] Low  High Low  High High High Low  Low  Low  Low  Low  Low  High High High\n[331] Low  High Low  Low  Low  Low  Low  High High Low  High Low  High High High\n[346] Low  Low  High Low  Low  Low  Low  High Low  High High Low  High Low  Low \n[361] Low  High High Low  Low  Low  High Low  High Low  Low  Low  High Low  High\n[376] Low  High High Low  High Low  Low  Low  High Low  High High Low  Low  High\n[391] Low  High Low  Low  High High Low  Low  Low  Low  High High High High Low \n[406] Low  High High High Low  High Low  High Low  Low  High High Low  Low  High\n[421] High Low  High Low  High High Low  Low  Low  Low  High Low  High Low  High\n[436] Low  High High Low  Low  High Low  Low  Low  High High Low  Low  Low  High\n[451] High High Low  High High High High Low  High High Low  Low  Low  High High\n[466] Low  High Low  High High Low  Low  Low  Low  Low  Low  Low  High Low  High\n[481] Low  High Low  Low  Low  Low  High High Low  High Low  Low  High Low  High\n[496] High Low  Low  Low  Low  Low  High Low  Low  High Low  Low  High Low  High\n[511] High Low  Low  Low  Low  Low  High Low  High High High High Low  Low  Low \n[526] Low  High Low  High Low  Low  Low  Low  Low  Low  Low  Low  High Low  High\n[541] Low  Low  Low  Low  High Low  High High High High High Low  High High Low \n[556] High High Low  High High Low  Low  Low  Low  Low  Low  High High High Low \n[571] Low  Low  High Low  High High High Low  Low  Low  Low  High High High Low \n[586] High High Low  Low  Low  Low  Low  High Low  Low  Low  Low  High High High\n[601] High Low  Low  Low  Low  Low  Low  High Low  High Low  High Low  Low  Low \n[616] Low  High Low  Low  High Low  Low  Low  Low  High Low  Low  Low  Low  Low \n[631] Low  Low  Low  High High Low  Low  Low  Low  High Low  High Low  High Low \n[646] Low  High Low  Low  Low  Low  High Low  Low  Low  High High High High High\n[661] Low  Low  High High Low  High High High Low  Low  High Low  High Low  Low \n[676] Low  High Low  High Low  High Low  Low  High Low  Low  Low  Low  High Low \n[691] High High Low  High Low  Low  Low  High High High High Low  Low  High Low \n[706] High Low  Low  Low  Low  High High High High Low  Low  Low  High Low  Low \n[721] High Low  Low  High High High High Low  Low  High Low  Low  High High High\n[736] High Low  High Low  High Low  Low  Low  Low  Low  Low  Low  High Low  Low \n[751] High Low  High High Low  High High High High Low  Low  Low  Low  Low  Low \n[766] Low  Low  High Low  Low  High High Low  Low \nLevels: Low High\nattr(,\"gstari\")\n[1] FALSE\nattr(,\"call\")\nlocalG(x = nga_wp$`wpt non-functional`, listw = wm72_lw)\nattr(,\"class\")\n[1] \"localG\"\n\nnga_wp.gi <- cbind(nga_wp, as.matrix(gi.fixed)) %>%\n  rename(gstat_fixed = as.matrix.gi.fixed.)"
  },
  {
    "objectID": "Take-home_Ex1/Take-home_Ex1.html#section",
    "href": "Take-home_Ex1/Take-home_Ex1.html#section",
    "title": "Take-home Exercise 1",
    "section": "",
    "text": "Mapping fixed distance with weights\nThe code chunk below shows the functions used to map the Gi values derived using fixed distance weight matrix.\n\nnonfunc <- qtm(nga_wp, \"wpt non-functional\")\n\nGimap <-tm_shape(nga_wp.gi) +\n  tm_fill(col = \"gstat_fixed\", \n          style = \"pretty\",\n          palette=\"-RdBu\",\n          title = \"local Gi\") +\n  tm_borders(alpha = 0.5)\n\ntmap_arrange(gdppc, Gimap, asp=1, ncol=2)"
  },
  {
    "objectID": "Take-home_Ex1/Take-home_Ex1.html#gi-statistics-using-adaptive-distance",
    "href": "Take-home_Ex1/Take-home_Ex1.html#gi-statistics-using-adaptive-distance",
    "title": "Take-home Exercise 1",
    "section": "Gi statistics using adaptive distance",
    "text": "Gi statistics using adaptive distance\n\nfips <- order(nga_wp$`wpt non-functional`)\ngi.adaptive <- localG(nga_wp$'wpt non-functional', knn_lw)\nhunan.gi <- cbind(nga_wp, as.matrix(gi.adaptive)) %>%\n  rename(gstat_adaptive = as.matrix.gi.adaptive.)"
  },
  {
    "objectID": "Take-home_Ex1/Take-home_Ex1.html#mapping-gi-values-with-adaptive-distance-weights",
    "href": "Take-home_Ex1/Take-home_Ex1.html#mapping-gi-values-with-adaptive-distance-weights",
    "title": "Take-home Exercise 1",
    "section": "Mapping Gi values with adaptive distance weights",
    "text": "Mapping Gi values with adaptive distance weights\n\nnonfunc <- qtm(nga_wp, \"wpt non-functional\")\n\nGimap <- tm_shape(hunan.gi) + \n  tm_fill(col = \"gstat_adaptive\", \n          style = \"pretty\", \n          palette=\"-RdBu\", \n          title = \"local Gi\") + \n  tm_borders(alpha = 0.5)\n\ntmap_arrange(nonfunc, \n             Gimap, \n             asp=1, \n             ncol=2)"
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html#introduction",
    "href": "Take-home_Ex2/Take-home_Ex2.html#introduction",
    "title": "Regionalisation of Multivariate Water Point Attributes with Non-spatially Constrained and Spatially Constrained Clustering Methods",
    "section": "Introduction",
    "text": "Introduction\nRegionalisation is the process of creating regions. It is one of the clustering methods which aims at grouping observations that are similar not only in statistical attributes but also in spatial location. Therefore, regionalisation absorbs the same logic as traditional clustering methods and also applies a series of geographical constraints."
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html#the-data",
    "href": "Take-home_Ex2/Take-home_Ex2.html#the-data",
    "title": "Regionalisation of Multivariate Water Point Attributes with Non-spatially Constrained and Spatially Constrained Clustering Methods",
    "section": "The Data",
    "text": "The Data\n\nApstial data\nFor the purpose of this assignment, data from WPdx Global Data Repositories will be used. There are two versions of the data. They are: WPdx-Basic and WPdx+. You are required to use WPdx+ data set.\n\n\nGeospatial data\nNigeria Level-2 Administrative Boundary (also known as Local Government Area) polygon features GIS data will be used in this take-home exercise. The data can be downloaded either from The Humanitarian Data Exchange portal or geoBoundaries."
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html#r-package",
    "href": "Take-home_Ex2/Take-home_Ex2.html#r-package",
    "title": "Regionalisation of Multivariate Water Point Attributes with Non-spatially Constrained and Spatially Constrained Clustering Methods",
    "section": "R package",
    "text": "R package\nThe packages will be used for this analysis:\nsf: for importing and processing geospatial data,\ntidyverse: for importing and processing non-spatial data.\n\npacman::p_load(sf, tidyverse, tmap, funModeling, sfdep, rgeoda, corrplot, cluster, NbClust, knitr, dplyr, ClustGeo, factoextra, heatmaply, spdep)"
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html#importing-water-point-data",
    "href": "Take-home_Ex2/Take-home_Ex2.html#importing-water-point-data",
    "title": "Regionalisation of Multivariate Water Point Attributes with Non-spatially Constrained and Spatially Constrained Clustering Methods",
    "section": "Importing water point data",
    "text": "Importing water point data\n\nwp_nga <- read_csv(\"data/WPdx.csv\") %>%\n  filter(`#clean_country_name` == \"Nigeria\")\n\nConvert Well Known Text data\nThere is a column called New Georeferenced Column which represent spatial data in a textual format. And this kind of text file is popularly known as Well Known Text(wkt).\nThere are two steps to convert this wkt format into a sf data frame.\nFirstly, st_as_sfc() of sf package is used to derive a new field called Geometry as shown in the code chunk below.\n\nwp_nga$Geometry = st_as_sfc(wp_nga$`New Georeferenced Column`)\n\nNext, st_sf() will be used to convert the tibble data frame into sf data frame.\n\nwp_sf <- st_sf(wp_nga, crs=4326) \n\nThe code chunk below is used to\n\nhead(wp_sf)"
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html#importing-nigeria-lga-level-boundary-data",
    "href": "Take-home_Ex2/Take-home_Ex2.html#importing-nigeria-lga-level-boundary-data",
    "title": "Regionalisation of Multivariate Water Point Attributes with Non-spatially Constrained and Spatially Constrained Clustering Methods",
    "section": "Importing Nigeria LGA level boundary data",
    "text": "Importing Nigeria LGA level boundary data\n\nnga <- st_read(dsn=\"data\",\n                   layer=\"nga_admbnda_adm2_osgof_20190417\",\n               crs=4326)\n\n\nChecking duplicate area name\nduplicated can retrieve which elements of a vector or data frame are duplicate. The code chunk below can be used to determine the duplicate elements.\n\nduplicate_area <- nga$`ADM2_EN`[nga$`ADM2_EN` %in% nga$`ADM2_EN`[duplicated(nga$`ADM2_EN`)]]\n\nindex <- which(nga$`ADM2_EN` %in% nga$`ADM2_EN`[duplicated(nga$`ADM2_EN`)])\n\nduplicate_area\nindex\n\nThere are 12 duplicate elements. Then we can check the location of each element by using tmap.\n\ntmap_mode(\"view\")\ntm_shape(nga[nga$`ADM2_EN`  %in% duplicate_area,]) +\n  tm_polygons()\n\nThen we can compare the map with the google map, and we can find the correct ADM2_EN.\n\n\n\nIndex\nOriginal ADM2_EN\nCorrect ADM2_EN\n\n\n\n\n94\nBassa\nBassa(Kogi)\n\n\n95\nBassa\nBassa(Plateau)\n\n\n304\nIfelodun\nIfelodun(Kwara)\n\n\n305\nIfelodun\nIfelodun(Osun)\n\n\n355\nIrepodun\nIrepodun(Kwara)\n\n\n356\nIrepodun\nIrepodun(Osun)\n\n\n519\nNasarawa\nNassarawa\n\n\n520\nNasarawa\nNasarawa\n\n\n546\nObi\nObi(Benue)\n\n\n547\nObi\nObi(Nasarawa)\n\n\n693\nSurulere\nSurulere(Lagos)\n\n\n694\nSurulere\nSurulere(Oyo)\n\n\n\nThe code chunk below is used to update the correct ADM2_EN.\n\nnga$`ADM2_EN` [c(94,95,304,305,355,356,519,546,547,693,694)] <- c(\"Bassa(Kogi)\",\"Bassa(Plateau)\",\n                                                                               \"Ifelodun(Kwara)\",\"Ifelodun(Osun)\",\n                                                                               \"Irepodun (Kwara)\",\"Irepodun(Osun)\",\n                                                                               \"Nassarawa\",\"Obi(Benue)\",\"Obi(Nasarawa)\",\n                                                                               \"Surulere(Lagos)\",\"Surulere(Oyo)\")\n\nWe can whether duplicate elements exist or not now.\n\nlength(nga$`ADM2_EN`[ nga$`ADM2_EN` %in% nga$`ADM2_EN`[duplicated(nga$`ADM2_EN`)] ])"
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html#point-in-polygon-overlay",
    "href": "Take-home_Ex2/Take-home_Ex2.html#point-in-polygon-overlay",
    "title": "Regionalisation of Multivariate Water Point Attributes with Non-spatially Constrained and Spatially Constrained Clustering Methods",
    "section": "Point in Polygon Overlay",
    "text": "Point in Polygon Overlay\nAlthough wp_sf sf data frame consists of a field called #clean_adm2 which by right should provides the LGA name of the water point located. However, it is always a good practice to be more caution when dealing with data accuracy.\nWe are going to use a geoprocessing function (or commonly know as GIS analysis) called point-in-polygon overlay to transfer the attribute information in nga sf data frame into wp_sf data frame.\n\nwp_sf <- st_join(wp_sf, nga)\n\nwrite_rdsof readr package is used to save the wp_sf data frame into an output file in rds data format. The output file is called wp_nga and saved in data sub-folder.\n\nwp_nigeria <- write_rds(wp_sf,\n                    \"data/wp_nigeria.rds\")"
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html#data-wrangling",
    "href": "Take-home_Ex2/Take-home_Ex2.html#data-wrangling",
    "title": "Regionalisation of Multivariate Water Point Attributes with Non-spatially Constrained and Spatially Constrained Clustering Methods",
    "section": "Data Wrangling",
    "text": "Data Wrangling\n\nRecode NA values into string\nThe code chunk below is used to recode all the NA values in #status_clean field into Unknown.\n\nwp_nigeria <- read_rds(\"data/wp_nigeria.rds\") %>%\n  mutate(`#status_clean`= replace_na(`#status_clean`, \"Unknown\"))\n\n\nfreq(data=wp_nigeria, \n     input = '#status_clean')\n\n\n\nExtracting Water Point Data by functional, non-functional and unknown\nWe are going to extract water point records by using #status_clean column.\nThe code chunk below is used to extract functional water points.\n\nwpt_functional <- wp_nigeria %>%\n  filter(`#status_clean` %in%\n           c(\"Functional\", \n             \"Functional but not in use\",\n             \"Functional but needs repair\"))\n\nThe code chunk below is used to extract non-functional water points.\n\nwpt_nonfunctional <- wp_nigeria %>%\n  filter(`#status_clean` %in%\n           c(\"Abandoned/Decommissioned\", \n             \"Abandoned\",\n             \"Non-Functional\",\n             \"Non functional due to dry season\",\n             \"Non-Functional due to dry season\"))\n\nThe code chunk below is used to extract unknown water points.\n\nwpt_unknown <- wp_nigeria %>%\n  filter(`#status_clean`  == \"Unknown\")\n\n\n\nExtracting Water Point Data by main technology\nThe code chunk below is used to display the distribution of technology adopted by water points.\n\nfreq(data=wp_nigeria, \n     input = '#water_tech_category')\n\nWe are going to categorize the technology into three types: Hand Pump, Mechanized Pump and Unknown(includes NA values, Tapstand, Rope and Bucket).\nThe code chunk below is used to extract water points by category.\n\nwpt_handpp <- wp_nigeria %>%\n  filter(`#water_tech_category` %in%\n           c(\"Hand Pump\"))\n\nwpt_mechanizedpp <- wp_nigeria %>%\n  filter(`#water_tech_category` %in%\n           c(\"Mechanized Pump\"))\n\n\n\nExtracting Water Point Data by usage capacity\n\nfreq(data=wp_nigeria, \n     input = 'usage_capacity')\n\nThe code chunk below is used to split usage_capacity into two categories (<1000 and >=1000).\n\nwpt_usage_cap_below_1k <- wp_nigeria %>%\n  filter(`usage_capacity` %in%\n           c(\"50\",\"250\",\"300\"))\n\nwpt_usage_cap_above_1k <- wp_nigeria %>%\n  filter(`usage_capacity` %in%\n           c(\"1000\"))\n\n\n\nExtracting Rural Water Point Data\n\nfreq(data=wp_nigeria, \n     input = 'is_urban')\n\n\nwpt_rural <- wp_nigeria %>%\n  filter(`is_urban` %in%\n           c(\"FALSE\"))\n\n\n\nPerforming Point-in-Polygon Count\nThe code chunk below is going to create a new data frame nigeria_wp to store the newly-derived variables.\n\nnigeria_wp <- nga %>% \n  mutate(`total wpt` = lengths(\n    st_intersects(nga, wp_nigeria))) %>%\n  mutate(`wpt functional` = lengths(\n    st_intersects(nga, wpt_functional))) %>%\n  mutate(`wpt non-functional` = lengths(\n    st_intersects(nga, wpt_nonfunctional))) %>%\n  mutate(`wpt unknown` = lengths(\n    st_intersects(nga, wpt_unknown))) %>%\n  mutate(`wpt handpump`=lengths(\n    st_intersects(nga, wpt_handpp))) %>%\n  mutate(`wpt mechpump`=lengths(\n    st_intersects(nga, wpt_mechanizedpp))) %>%\n  mutate(`wpt usage_below_1k`=lengths(\n    st_intersects(nga, wpt_usage_cap_below_1k))) %>%\n  mutate(`wpt usage_above_1k`=lengths(\n    st_intersects(nga, wpt_usage_cap_above_1k))) %>%\n  mutate(`wpt rural`=lengths(\n    st_intersects(nga, wpt_rural)))"
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html#saving-the-analytical-data-table",
    "href": "Take-home_Ex2/Take-home_Ex2.html#saving-the-analytical-data-table",
    "title": "Regionalisation of Multivariate Water Point Attributes with Non-spatially Constrained and Spatially Constrained Clustering Methods",
    "section": "Saving the Analytical Data Table",
    "text": "Saving the Analytical Data Table\nThe code chunk below is used to generate related percentage.\n\nnigeria_wp <- nigeria_wp %>%\n  mutate(`pct_functional` = `wpt functional`/`total wpt`) %>%\n  mutate(`pct_non-functional` = `wpt non-functional`/`total wpt`) %>%\n  mutate(`pct_handpump` = `wpt handpump`/`total wpt`) %>%\n  mutate(`pct_mechpump` = `wpt mechpump`/`total wpt`) %>%\n  mutate(`pct_usage_below_1k` = `wpt usage_below_1k`/`total wpt`) %>%\n  mutate(`pct_usage_above_1k` = `wpt usage_above_1k`/`total wpt`) %>%\n  mutate(`pct_rural` = `wpt rural`/`total wpt`) %>%\n  select(3:4, 9:10, 18:33)\n\n\nwrite_rds(nigeria_wp, \"data/nigeria_wp.rds\")\n\n\nnigeria_wp <- read_rds(\"data/nigeria_wp.rds\")\n\nThe code chunk below is\n\nsummary(nigeria_wp)\n\n   ADM2_EN           ADM2_PCODE         ADM1_PCODE          ADM0_EN         \n Length:774         Length:774         Length:774         Length:774        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n                                                                            \n   total wpt     wpt functional   wpt non-functional  wpt unknown    \n Min.   :  0.0   Min.   :  0.00   Min.   :  0.00     Min.   :  0.00  \n 1st Qu.: 45.0   1st Qu.: 17.00   1st Qu.: 12.25     1st Qu.:  0.00  \n Median : 96.0   Median : 45.50   Median : 34.00     Median :  0.00  \n Mean   :122.7   Mean   : 67.36   Mean   : 41.60     Mean   : 13.76  \n 3rd Qu.:168.8   3rd Qu.: 87.75   3rd Qu.: 60.75     3rd Qu.: 17.75  \n Max.   :894.0   Max.   :752.00   Max.   :278.00     Max.   :219.00  \n                                                                     \n  wpt handpump     wpt mechpump    wpt usage_below_1k wpt usage_above_1k\n Min.   :  0.00   Min.   :  0.00   Min.   :  0.00     Min.   :  0.00    \n 1st Qu.:  6.00   1st Qu.: 11.00   1st Qu.: 16.00     1st Qu.: 11.00    \n Median : 47.00   Median : 25.50   Median : 60.00     Median : 25.50    \n Mean   : 75.89   Mean   : 33.12   Mean   : 89.59     Mean   : 33.12    \n 3rd Qu.:111.00   3rd Qu.: 46.00   3rd Qu.:127.75     3rd Qu.: 46.00    \n Max.   :764.00   Max.   :245.00   Max.   :767.00     Max.   :245.00    \n                                                                        \n   wpt rural      pct_functional   pct_non-functional  pct_handpump   \n Min.   :  0.00   Min.   :0.0000   Min.   :0.0000     Min.   :0.0000  \n 1st Qu.: 23.00   1st Qu.:0.3333   1st Qu.:0.2211     1st Qu.:0.1860  \n Median : 64.00   Median :0.4792   Median :0.3559     Median :0.5255  \n Mean   : 97.45   Mean   :0.5070   Mean   :0.3654     Mean   :0.4956  \n 3rd Qu.:141.00   3rd Qu.:0.6749   3rd Qu.:0.5082     3rd Qu.:0.7857  \n Max.   :894.00   Max.   :1.0000   Max.   :1.0000     Max.   :1.0000  \n                  NA's   :13       NA's   :13         NA's   :13      \n  pct_mechpump    pct_usage_below_1k pct_usage_above_1k   pct_rural     \n Min.   :0.0000   Min.   :0.0000     Min.   :0.0000     Min.   :0.0000  \n 1st Qu.:0.1250   1st Qu.:0.4157     1st Qu.:0.1250     1st Qu.:0.5922  \n Median :0.3193   Median :0.6807     Median :0.3193     Median :0.8717  \n Mean   :0.3818   Mean   :0.6182     Mean   :0.3818     Mean   :0.7395  \n 3rd Qu.:0.5843   3rd Qu.:0.8750     3rd Qu.:0.5843     3rd Qu.:1.0000  \n Max.   :1.0000   Max.   :1.0000     Max.   :1.0000     Max.   :1.0000  \n NA's   :13       NA's   :13         NA's   :13         NA's   :13      \n          geometry  \n MULTIPOLYGON :774  \n epsg:4326    :  0  \n +proj=long...:  0"
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html#visualizing-the-spatial-distribution-of-water-points",
    "href": "Take-home_Ex2/Take-home_Ex2.html#visualizing-the-spatial-distribution-of-water-points",
    "title": "Regionalisation of Multivariate Water Point Attributes with Non-spatially Constrained and Spatially Constrained Clustering Methods",
    "section": "Visualizing the spatial distribution of water points",
    "text": "Visualizing the spatial distribution of water points\n\ntotal <- qtm(nigeria_wp, \"total wpt\")\nwp_functional <- qtm(nigeria_wp, \"wpt functional\")\nwp_nonfunctional <- qtm(nigeria_wp, \"wpt non-functional\")\nunknown <- qtm(nigeria_wp, \"wpt unknown\")\n\ntmap_arrange(total, wp_functional, wp_nonfunctional, unknown, asp=1, ncol=2)"
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html#correlation-analysis",
    "href": "Take-home_Ex2/Take-home_Ex2.html#correlation-analysis",
    "title": "Regionalisation of Multivariate Water Point Attributes with Non-spatially Constrained and Spatially Constrained Clustering Methods",
    "section": "Correlation Analysis",
    "text": "Correlation Analysis\nBefore we perform cluster analysis, it is important for us to ensure that the cluster variables are not highly correlated.\n\nNaN_list <- is.nan(nigeria_wp$pct_functional)\nnigeria_wp$pct_functional[NaN_list] <- 0\n\nNaN_list <- is.nan(nigeria_wp$`pct_non-functional`)\nnigeria_wp$`pct_non-functional`[NaN_list] <- 0\n\nNaN_list <- is.nan(nigeria_wp$pct_handpump)\nnigeria_wp$pct_handpump[NaN_list] <- 0\n\nNaN_list <- is.nan(nigeria_wp$pct_usage_above_1k)\nnigeria_wp$pct_usage_above_1k[NaN_list] <- 0\n\nNaN_list <- is.nan(nigeria_wp$pct_rural)\nnigeria_wp$pct_rural[NaN_list] <- 0\n\n\ncorr_data <- nigeria_wp[,c(6:7, 14:16, 19:20)] %>% st_set_geometry(NULL)\n\n\ncluster_vars.cor = cor(corr_data[,1:7])\ncorrplot.mixed(cluster_vars.cor,\n         lower = \"ellipse\", \n               upper = \"number\",\n               tl.pos = \"lt\",\n               diag = \"l\",\n               tl.col = \"black\")\n\n\n\n\n\nrm(cluster_vars.cor)\nrm(corr_data)"
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html#section",
    "href": "Take-home_Ex2/Take-home_Ex2.html#section",
    "title": "Regionalisation of Multivariate Water Point Attributes with Non-spatially Constrained and Spatially Constrained Clustering Methods",
    "section": "",
    "text": "Hierarchy Cluster Analysis"
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html#extract-the-clustering-variables",
    "href": "Take-home_Ex2/Take-home_Ex2.html#extract-the-clustering-variables",
    "title": "Regionalisation of Multivariate Water Point Attributes with Non-spatially Constrained and Spatially Constrained Clustering Methods",
    "section": "Extract the clustering variables",
    "text": "Extract the clustering variables\nTo perform the analysis, we need to extract the cluster variables without the geometric data. To do this, we we will use the function st_set_geometry(NULL) from sf package on our sf dataframe.\n\nNaN_list <- is.nan(nigeria_wp$pct_functional)\nnigeria_wp$pct_functional[NaN_list] <- 0\n\nNaN_list <- is.nan(nigeria_wp$`pct_non-functional`)\nnigeria_wp$`pct_non-functional`[NaN_list] <- 0\n\nNaN_list <- is.nan(nigeria_wp$pct_handpump)\nnigeria_wp$pct_handpump[NaN_list] <- 0\n\nNaN_list <- is.nan(nigeria_wp$pct_usage_above_1k)\nnigeria_wp$pct_usage_above_1k[NaN_list] <- 0\n\nNaN_list <- is.nan(nigeria_wp$pct_rural)\nnigeria_wp$pct_rural[NaN_list] <- 0\n\nWe run the code as follow:\n\ncluster_vars <- nigeria_wp %>%\n  st_set_geometry(NULL) %>%\n  select(\"ADM2_EN\", \"wpt functional\", \"wpt non-functional\", \n         \"pct_functional\", \"pct_non-functional\", \n         \"pct_handpump\", \"pct_usage_below_1k\", \"pct_rural\")\n\nhead(cluster_vars,3)\n\n    ADM2_EN wpt functional wpt non-functional pct_functional pct_non-functional\n1 Aba North              7                  9      0.4117647          0.5294118\n2 Aba South             29                 35      0.4084507          0.4929577\n3    Abadam              0                  0      0.0000000          0.0000000\n  pct_handpump pct_usage_below_1k  pct_rural\n1   0.11764706          0.1764706 0.00000000\n2   0.09859155          0.1267606 0.05633803\n3   0.00000000                NaN 0.00000000\n\n\nNext, we need to change the row names using row.name() function from R base:\n\nrow.names(cluster_vars) <- cluster_vars$\"ADM2_EN\"\nhead(cluster_vars,3)\n\n            ADM2_EN wpt functional wpt non-functional pct_functional\nAba North Aba North              7                  9      0.4117647\nAba South Aba South             29                 35      0.4084507\nAbadam       Abadam              0                  0      0.0000000\n          pct_non-functional pct_handpump pct_usage_below_1k  pct_rural\nAba North          0.5294118   0.11764706          0.1764706 0.00000000\nAba South          0.4929577   0.09859155          0.1267606 0.05633803\nAbadam             0.0000000   0.00000000                NaN 0.00000000\n\n\nNow, we do not need the column ADM2_EN & pct_usage_below_1k anymore, so we exclude it:\n\ncluster_vars <- select(cluster_vars, c(2:6,8))\nhead(cluster_vars, 3)\n\n          wpt functional wpt non-functional pct_functional pct_non-functional\nAba North              7                  9      0.4117647          0.5294118\nAba South             29                 35      0.4084507          0.4929577\nAbadam                 0                  0      0.0000000          0.0000000\n          pct_handpump  pct_rural\nAba North   0.11764706 0.00000000\nAba South   0.09859155 0.05633803\nAbadam      0.00000000 0.00000000"
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html#data-standardization",
    "href": "Take-home_Ex2/Take-home_Ex2.html#data-standardization",
    "title": "Regionalisation of Multivariate Water Point Attributes with Non-spatially Constrained and Spatially Constrained Clustering Methods",
    "section": "Data Standardization",
    "text": "Data Standardization\nwe can see that the columns wpt_functional and wpt_non_functional have much higher ranges since they are counts instead of percentages. Thus we need to perform standardization on these columns. This is because analysis results will be biased towards clustering variables with large values. Hence the need for standardization before cluster analysis\nWe will therefore perform the min-max standardization using the normalize() of the heatmaply package:\n(we use summary() of base R package to check the outcome)\n\nstd_cluster_vars <- normalize(cluster_vars)\nsummary(std_cluster_vars)\n\n wpt functional    wpt non-functional pct_functional   pct_non-functional\n Min.   :0.00000   Min.   :0.00000    Min.   :0.0000   Min.   :0.0000    \n 1st Qu.:0.02261   1st Qu.:0.04406    1st Qu.:0.3261   1st Qu.:0.2105    \n Median :0.06051   Median :0.12230    Median :0.4741   Median :0.3505    \n Mean   :0.08957   Mean   :0.14962    Mean   :0.4984   Mean   :0.3592    \n 3rd Qu.:0.11669   3rd Qu.:0.21853    3rd Qu.:0.6699   3rd Qu.:0.5076    \n Max.   :1.00000   Max.   :1.00000    Max.   :1.0000   Max.   :1.0000    \n  pct_handpump      pct_rural     \n Min.   :0.0000   Min.   :0.0000  \n 1st Qu.:0.1670   1st Qu.:0.5727  \n Median :0.5099   Median :0.8645  \n Mean   :0.4873   Mean   :0.7271  \n 3rd Qu.:0.7778   3rd Qu.:1.0000  \n Max.   :1.0000   Max.   :1.0000"
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html#compute-the-proximity-matrix",
    "href": "Take-home_Ex2/Take-home_Ex2.html#compute-the-proximity-matrix",
    "title": "Regionalisation of Multivariate Water Point Attributes with Non-spatially Constrained and Spatially Constrained Clustering Methods",
    "section": "Compute the proximity matrix",
    "text": "Compute the proximity matrix\nWhen calculating proximity matrix, there are a few options available for us:\n-Euclidean\n-Maximum\n-Manhattan / City Block Distance\n-Canberra\n-Binary\n-Minkowski\nWe will use Euclidean since it is the default.\nUsing the dist() of the base R package, we will compute the proximity matrix:\n\nproxmat <- dist(std_cluster_vars, method = 'euclidean')"
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html#compute-the-clustering",
    "href": "Take-home_Ex2/Take-home_Ex2.html#compute-the-clustering",
    "title": "Regionalisation of Multivariate Water Point Attributes with Non-spatially Constrained and Spatially Constrained Clustering Methods",
    "section": "Compute the Clustering",
    "text": "Compute the Clustering\nThere are 2 forms of clustering methods:\n\nAgglomerative-AGNES: This is a bottom up manner where each point starts as a cluster\nDivise Analysis-DIANA: This is a top down approach. At each step, most heterogeneous is split.\n\nThere are a total of eight clustering algorithms for AGNES:\n-ward.D\n-ward.D2\n-single\n-complete\n-average(UPGMA)\n-mcquitty(WPGMA)\n-median(WPGMC)\n-centroid(UPGMC)\nWe will start off with “ward.D”\nUsing hclust() of the base R package, we will compute the cluster as follow:\n\nhclust_ward <- hclust(proxmat, method = 'ward.D')\n\nWe will then get an object hclust_ward which contains the detaiLED information on the structure of the cluster tree. This will allow the later plot() function to know how to plot the structure correctly."
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html#plotting-the-dendrogram",
    "href": "Take-home_Ex2/Take-home_Ex2.html#plotting-the-dendrogram",
    "title": "Regionalisation of Multivariate Water Point Attributes with Non-spatially Constrained and Spatially Constrained Clustering Methods",
    "section": "Plotting the Dendrogram:",
    "text": "Plotting the Dendrogram:\nEach time the code is run, the .png object will be updated. For better resolution, we increase the width and height of the .png file. The “cex” is adjusted such that the names of each region is just visible when we zoom in on the .png object.\nAdditional parameters:\n\nlwd: Line width\nmain: Title\nline: Position of title\ncex.main: Size of title\n\nWe run the code as follow:\n\npng(\"plotdendogram.png\",width=12800,height=3200)\nplot(hclust_ward, cex = 1.2, lwd=3.0, main=\"Dendrogram\", line = -20, cex.main=20)"
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html#selecting-the-optimal-clustering-algorithm",
    "href": "Take-home_Ex2/Take-home_Ex2.html#selecting-the-optimal-clustering-algorithm",
    "title": "Regionalisation of Multivariate Water Point Attributes with Non-spatially Constrained and Spatially Constrained Clustering Methods",
    "section": "Selecting the optimal clustering algorithm:",
    "text": "Selecting the optimal clustering algorithm:\nIn order the measure the strength of the clustering structure, we will need to measure the agglomerative coefficient. If we compare the aforementioned coefficient across various clustering algorithms, we will be able to select the algorithm that gives us the best clustering structure.\n\nagnes_result <- agnes(std_cluster_vars, method = \"ward\")\nagnes_result$ac\n\n[1] 0.990276\n\n\nThe results are stored in the output data structure under the name agnes_result$ac. The higher the magnitude of this value, the better the clustering structure. In this case, “ward” gets a score of 0.9899133 which shows strong clustering structure.\nWe will need to test all 4 of the clustering algorithms to determine which is the best to apply.\nFirst, we need to create a data structure to hold the names of the clustering algorithms:\n\nalgorithms <- c( \"average\", \"single\", \"complete\", \"ward\")\nnames(algorithms) <- c( \"average\", \"single\", \"complete\", \"ward\")\nalgorithms\n\n   average     single   complete       ward \n \"average\"   \"single\" \"complete\"     \"ward\" \n\n\nNext we write a simple function “test” that takes in the name of the clustering algorithm and then outputs the score of the clustering structure:\n\ntest <- function(x) {\n  agnes(std_cluster_vars, method = x)$ac\n}\n\n\nmap_dbl(algorithms, test)\n\n  average    single  complete      ward \n0.9114067 0.7819154 0.9440637 0.9902760 \n\n\nOf the clustering algorithms, we can see that “ward” methods gives us the best clustering structure. Hence we will use this for the rest of the analysis.\nWe perform house keeping:\n\nrm(cluster_vars)\nrm(agnes_result)\nrm(algorithms)\n# rm(proxmat)\nrm(test)"
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html#determining-optimal-clusters",
    "href": "Take-home_Ex2/Take-home_Ex2.html#determining-optimal-clusters",
    "title": "Regionalisation of Multivariate Water Point Attributes with Non-spatially Constrained and Spatially Constrained Clustering Methods",
    "section": "Determining optimal clusters",
    "text": "Determining optimal clusters\nThere are three commonly used methods to determine the optimal clusters, they are:\n\nElbow Method\nAverage Silhouette Method\nGap Statistic Method\n\nLet us use Elbow Method to determine optimal no. of clusters.\nfviz_nbclust() of factoextra package - to specify the no. of clusters to be generated\nmethod - wss - within sum of squares\n\nset.seed(3456)\nhclust_ward <- hclust(proxmat, method = 'ward.D')\nplot(hclust_ward, cex = 0.9)\nrect.hclust(hclust_ward, \n            k = 4, \n            border = 2:5)\n\n\n\n\n\nMapping the clusters\nWe first use the function cutree() of R base to prune the clusters to 5:\n\ngroups <- as.factor(cutree(hclust_ward, k=5))\n\nWe will create a new sf dataframe nga_final which includes the geometry and the variables:\n\nnga_final <- nigeria_wp %>%\n  select(\"ADM2_EN\", \"wpt functional\", \"wpt non-functional\", \n         \"pct_functional\", \"pct_non-functional\", \n         \"pct_handpump\", \"pct_usage_below_1k\", \"pct_rural\")\n\nNext, we will use cbind() from base R to save the clustering group as a column:\n\nbind_std_cluster_vars <- cbind(nga_final, as.matrix(groups)) %>%\n  rename(`CLUSTER`=`as.matrix.groups.`)\n\nHere we will do a simple filtering to allow us to get the group number of a specific region\n\nbind_std_cluster_vars %>% filter(ADM2_EN == \"Kanke\")\n\nSimple feature collection with 1 feature and 9 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 9.466316 ymin: 9.176965 xmax: 9.791339 ymax: 9.539964\nGeodetic CRS:  WGS 84\n  ADM2_EN wpt.functional wpt.non.functional pct_functional pct_non.functional\n1   Kanke            217                 89       0.484375          0.1986607\n  pct_handpump pct_usage_below_1k pct_rural CLUSTER\n1    0.6160714          0.9330357         1       2\n                        geometry\n1 MULTIPOLYGON (((9.74176 9.5...\n\n\nUsing qtm() of the tmap, we will perform a quick plot as follow:\n\ntmap_mode(\"plot\")\n\n\ntm_shape(bind_std_cluster_vars) + \n  tm_fill(\"CLUSTER\") + \n  tm_borders(alpha = 0.9) + \n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2) +\n  tm_layout(main.title = \"Cluster Distribution of Nigeria\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) \n\n\n\n\nFrom the above plot, we can see that if we do clustering without consideration for geographic location, we get a cluster map that has clusters that are highly fragmented.\nSKATER\nUnconstrained clustering often will show some form of regional clustering, but if we want all members of the clusters to show spatially contiguous relationships, we need specialized algorithm such as SKATER.\nA key idea here is that traditional cluster valuation measures is sub-optimal in practice because of real-world constraints. As shown from the unconstrained cluster evaluation above, our clusters turned out to be quite fragmented.\nThus, the advantage of using SKATER is that it provides a hard requirement that spatial objects in the same cluster are also geographically linked. It is a rationalization approach using graph partitioning while preserving neighborhood connectivity.\nCheck for regions without neighbors:\n\nsummary(poly2nb(nigeria_wp))\n\nNeighbour list object:\nNumber of regions: 774 \nNumber of nonzero links: 4440 \nPercentage nonzero weights: 0.7411414 \nAverage number of links: 5.736434 \n1 region with no links:\n86\nLink number distribution:\n\n  0   1   2   3   4   5   6   7   8   9  10  11  12  14 \n  1   2  14  57 125 182 140 122  72  41  12   4   1   1 \n2 least connected regions:\n138 560 with 1 link\n1 most connected region:\n508 with 14 links\n\n\n\npoly2nb(nigeria_wp)[86]\n\n[[1]]\n[1] 0\n\n\nRemove regions without neighbors:\nWe remove row 86 from boundary file:\n\nnga <- nigeria_wp[c(1:85, 87:774),]\n\n\nbind_std_cluster_vars <- bind_std_cluster_vars[c(1:85, 87:774),]\nnga_wp <- nga_wp[c(1:85, 87:774),]\nstd_cluster_vars <- std_cluster_vars[c(1:85, 87:774),]\nnga_final <- nga_final[c(1:85, 87:774),]\n\nCompute the neighbors and the cost:\nNeighbor\nWe will convert the boundary file to a spatial file and then feed it to the function poly2nb():\n\nnga_sp <- as_Spatial(nga)\nnga.nb <- poly2nb(nga_sp)\nsummary(nga.nb)\n\nNeighbour list object:\nNumber of regions: 773 \nNumber of nonzero links: 4440 \nPercentage nonzero weights: 0.7430602 \nAverage number of links: 5.743855 \nLink number distribution:\n\n  1   2   3   4   5   6   7   8   9  10  11  12  14 \n  2  14  57 125 182 140 122  72  41  12   4   1   1 \n2 least connected regions:\n138 560 with 1 link\n1 most connected region:\n508 with 14 links\n\n\nWe can then plot the neighbor relationship:\n\nplot(nga_sp, \n     border=grey(.5), main=\"Neighbor Map\", cex.main=4)\nplot(nga.nb, \n     coordinates(nga_sp), \n     col=\"blue\", \n     add=TRUE)\n\n\n\n\nEdge cost and weights\nNext we will use the neighbor list and the clustering variables to compute the edge cost\nusing nbcosts() of spdep package:\n\nlcosts <- nbcosts(nga.nb, std_cluster_vars)\n\nNext we need to construct the weights taking into account the edge cost and the neighbors:\n(We need to use “B” for binary here since we want the edge cost)\n\nnga.w <- nb2listw(nga.nb, \n                   lcosts, \n                   style=\"B\")\n\n\nsummary(nga.w)\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 773 \nNumber of nonzero links: 4440 \nPercentage nonzero weights: 0.7430602 \nAverage number of links: 5.743855 \nLink number distribution:\n\n  1   2   3   4   5   6   7   8   9  10  11  12  14 \n  2  14  57 125 182 140 122  72  41  12   4   1   1 \n2 least connected regions:\n138 560 with 1 link\n1 most connected region:\n508 with 14 links\n\nWeights style: B \nWeights constants summary:\n    n     nn       S0       S1       S2\nB 773 597529 3199.663 5587.281 64117.47\n\n\nConstruct Minimum Spanning Tree\n\nnga.mst <- mstree(nga.w)\nclass(nga.mst)\n\n[1] \"mst\"    \"matrix\"\n\ndim(nga.mst)\n\n[1] 772   3\n\nhead(nga.mst)\n\n     [,1] [,2]      [,3]\n[1,]  390   94 0.4439272\n[2,]   94  468 0.4817959\n[3,]  390  389 0.5807338\n[4,]  389  486 0.2355439\n[5,]  486  695 0.3001971\n[6,]  695  410 0.2262063\n\n\nFinally we can plot the minimum spanning tree as follow:\n(We will set the size of label to be small so we can see the tree)\n\nplot(nga_sp, border=gray(.5), main=\"Minimum Spanning Tree\", cex.main=4)\nplot.mst(nga.mst,\n         coordinates(nga_sp),\n         col=\"blue\",\n         cex.lab=0.1,\n         cex.circles=0.005,\n         add=TRUE)\n\n\n\n\n\nrm(lcosts)\nrm(nga.w)\nrm(nga.nb)\n\nCompute Spatially constrained clusters with SKATER method\nNow that we have the minimum spanning tree, we can then compute the spatially constrained cluster using the skater() package of spdep. We will be needing the minimum spanning tree computed earlier as well as the standardized cluster variables.\nNote: the number of cuts is not equal to the number of clusters. For cluster 5, the number of cuts required is actually 4.\nWe run the code as follow\n\nclust5 <- spdep::skater(edges = nga.mst[,1:2], \n                 data = std_cluster_vars, \n                 method = \"euclidean\", \n                 ncuts = 4)\nccs5 <- clust5$groups\n\nNext we will plot our the lines for each individual cluster:\n\nplot(nga_sp, border=gray(.1), main=\"SKATER Clusters\", cex.main=4)\nplot(clust5, \n     coordinates(nga_sp), \n     cex.lab=0.1,\n     groups.colors=c(\"red\",\"green\",\"blue\", \"brown\", \"black\"),\n     cex.circles=0.005, lwd=3.0,\n     add=TRUE)\n\n\n\n\nLastly we can visualize our outcome with qtm() of the tmap:\n\ngroups_mat <- as.matrix(clust5$groups)\nnga_sf_spatialcluster <- cbind(nga_final, as.factor(groups_mat)) %>%\n    rename(`SP_CLUSTER`=`as.factor.groups_mat.`)\n\ntm_shape(nga_sf_spatialcluster) + \n  tm_fill(\"SP_CLUSTER\") + \n  tm_borders(alpha = 0.9) + \n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2) +\n  tm_layout(main.title = \"Cluster Distribution of Nigeria\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) \n\nAfter applying the SKATER method, we not see that the clusters becomes much less fragmented. as compared to earlier.\nWe can easily compare the difference using tmap_arrange() from the tmap package:\n\ntmap_mode(\"plot\")\n\n\nnormal_cluster.map <- tm_shape(bind_std_cluster_vars) + \n                      tm_fill(\"CLUSTER\") + \n                      tm_borders(alpha = 1.0) + \n                      tm_compass(type=\"8star\", size = 2) +\n                      tm_scale_bar() +\n                      tm_grid(alpha =0.2) +\n                      tm_layout(main.title = \"Cluster Distribution of Nigeria\",\n                                main.title.position = \"center\",\n                                main.title.size = 1.2,\n                                legend.height = 0.45, \n                                legend.width = 0.35,\n                                frame = TRUE) \n\nskater_cluster.map <- tm_shape(nga_sf_spatialcluster) + \n                      tm_fill(\"SP_CLUSTER\") + \n                      tm_borders(alpha = 1.0) + \n                      tm_compass(type=\"8star\", size = 2) +\n                      tm_scale_bar() +\n                      tm_grid(alpha =0.2) +\n                      tm_layout(main.title = \"Cluster Distribution of Nigeria\",\n                                main.title.position = \"center\",\n                                main.title.size = 1.2,\n                                legend.height = 0.45, \n                                legend.width = 0.35,\n                                frame = TRUE) \n\ntmap_arrange(normal_cluster.map, skater_cluster.map,\n             asp=NA, ncol=2)\n\n\nrm(clust5)\nrm(groups_mat)\nrm(normal_cluster.map)\nrm(skater_cluster.map)\n\nSpatially Constrained Method with ClustGeo\nClustGeo is a useful package that allows us to mix and find the best balance between maintaining spatial contiguity and the solution based on the variable of interest. All this is controlled by the mixing variable alpha.\nThere are 2 matrix D0 & D1 that is involved:\n-D0: This matrix represents the dissimilarities in the attribute/clustering variable space.\n-D1: This matrix represents the dissimilarities in the spatial domain.\nOur goal is thus to find a good balance between this 2 matrix using the alpha variable.\nTraditional Ward-Like clustering with ClustGeo\nClustGeo also offers a non-spatially constrained clustering with hclustgeo() as follow:\n\nnon_geo_cluster <- hclustgeo(proxmat)\n\npng(\"plotdendogram_1.png\",width=12800,height=3200)\nplot(non_geo_cluster, cex = 1.2, lwd=3.0, main=\"Dendrogram\", \n     line = -20, cex.main=20)\n\nPreparing Spatially Constrained Hierarchical Clustering\nTo perform the clustering, we need 3 ingredients:\n-Distance Matrix: Represents the spatial domain\n-Proximity Matrix: Represents the variable domain\n-Mixing variable Alpha: This is required for denoting the degree of mix\n\ndist <- st_distance(nga_final, nga_final)\ndistmat <- as.dist(dist)\nproxmat <- dist(std_cluster_vars, method = 'euclidean')\ncr <- choicealpha(proxmat, distmat, range.alpha = seq(0, 1, 0.1), K=6, \n                  graph = TRUE)\n\n\n\n\n\n\n\nSpatially Constrained Hierarchical Clustering\n\nclustG <- hclustgeo(proxmat, distmat, alpha = 0.5)\ngroups <- as.factor(cutree(clustG, k=5))\nnga_sf_Gcluster <- cbind(nga_final, as.matrix(groups)) %>%\n                  rename(`CLUSTER` = `as.matrix.groups.`)\nqtm(nga_sf_Gcluster, \"CLUSTER\")"
  }
]